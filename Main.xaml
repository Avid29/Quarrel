<Page
    x:Class="Discord_UWP.Main"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Discord_UWP"
    xmlns:md="using:Discord_UWP.MarkdownTextBlock"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:tk="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Discord_UWP.Controls"
    xmlns:gregstoll="using:Gregstoll"
    mc:Ignorable="d">
    <Page.Resources>
        <Storyboard x:Name="DarkenMessageArea" >
            <DoubleAnimation Storyboard.TargetName="ContentCache" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.4">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="LightenMessageArea" >
            <DoubleAnimation Storyboard.TargetName="ContentCache" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Style x:Key="TextBoxStyle1" TargetType="TextBox">
            <Setter Property="MinWidth" Value="{ThemeResource TextControlThemeMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource TextControlThemeMinHeight}"/>
            <Setter Property="Foreground" Value="{ThemeResource TextControlForeground}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{ThemeResource TextControlBorderBrush}"/>
            <Setter Property="SelectionHighlightColor" Value="{ThemeResource Blurple}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
            <Setter Property="Padding" Value="{ThemeResource TextControlThemePadding}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Grid>
                            <Grid.Resources>
                                <Style x:Name="DeleteButtonStyle" TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid x:Name="ButtonLayoutGrid" BorderBrush="{ThemeResource TextControlButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{ThemeResource TextControlButtonBackground}">
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="PointerOver">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonLayoutGrid">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonLayoutGrid">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPointerOver}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonLayoutGrid">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBackgroundPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonLayoutGrid">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonBorderBrushPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
                                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlButtonForegroundPressed}"/>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ButtonLayoutGrid"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <TextBlock x:Name="GlyphElement" AutomationProperties.AccessibilityView="Raw" Foreground="{ThemeResource TextControlButtonForeground}" FontStyle="Normal" FontSize="12" FontFamily="{ThemeResource SymbolThemeFontFamily}" HorizontalAlignment="Center" Text="&#xE10A;" VerticalAlignment="Center"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlHeaderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBackgroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlBorderBrushDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundDisabled}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="PointerOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="PlaceholderTextContentPresenter">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TextControlPlaceholderForegroundPointerOver}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonStates">
                                    <VisualState x:Name="ButtonVisible">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ButtonCollapsed"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="1"/>
                            <ContentPresenter x:Name="HeaderContentPresenter" Grid.ColumnSpan="2" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource TextControlHeaderForeground}" FontWeight="Normal" Margin="0,0,0,8" Grid.Row="0" TextWrapping="{TemplateBinding TextWrapping}" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                            <ScrollViewer x:Name="ContentElement" AutomationProperties.AccessibilityView="Raw" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
                            <ContentPresenter x:Name="PlaceholderTextContentPresenter" Grid.ColumnSpan="2" Content="{TemplateBinding PlaceholderText}" Foreground="{ThemeResource TextControlPlaceholderForeground}" IsHitTestVisible="False" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.Row="1" TextWrapping="{TemplateBinding TextWrapping}"/>
                            <Button x:Name="DeleteButton" AutomationProperties.AccessibilityView="Raw" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Margin="{ThemeResource HelperButtonThemePadding}" MinWidth="34" Grid.Row="1" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" VerticalAlignment="Stretch"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="GroupHeaderStyle" TargetType="ListViewHeaderItem">
            <Setter Property="Margin" Value="6,6,6,-4"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewHeaderItem">
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <CollectionViewSource x:Name="MembersCvs" IsSourceGrouped="True"/>
        <CollectionViewSource x:Name="ChannelsCVS"/>
        <Style x:Key="AppBarButtonStyle1" TargetType="AppBarButton">
            <Setter Property="Background" Value="{ThemeResource AppBarButtonBackground}"/>
            <Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}"/>
            <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonBorderBrush}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="Width" Value="68"/>
            <Setter Property="UseSystemFocusVisuals" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="AppBarButton">
                        <Grid x:Name="Root" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" MaxWidth="{TemplateBinding MaxWidth}" MinWidth="{TemplateBinding MinWidth}">
                            <Grid.Resources>
                                <Style x:Name="LabelOnRightStyle" TargetType="AppBarButton">
                                    <Setter Property="Width" Value="NaN"/>
                                </Style>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ApplicationViewStates">
                                    <VisualState x:Name="FullSize"/>
                                    <VisualState x:Name="Compact">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelOnRight">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="ContentViewbox">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="12,14,0,14"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="MinHeight" Storyboard.TargetName="ContentRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Row)" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="TextAlignment" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="8,15,12,17"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LabelCollapsed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="MinHeight" Storyboard.TargetName="ContentRoot">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="TextLabel">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Overflow">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.Visibility" Value="Collapsed"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithToggleButtons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.Visibility" Value="Collapsed"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithMenuIcons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="ContentViewbox.VerticalAlignment" Value="Center"/>
                                            <Setter Target="ContentViewbox.Width" Value="16"/>
                                            <Setter Target="ContentViewbox.Height" Value="16"/>
                                            <Setter Target="ContentViewbox.Margin" Value="12,0,12,0"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons">
                                        <VisualState.Setters>
                                            <Setter Target="ContentRoot.MinHeight" Value="0"/>
                                            <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left"/>
                                            <Setter Target="ContentViewbox.VerticalAlignment" Value="Center"/>
                                            <Setter Target="ContentViewbox.Width" Value="16"/>
                                            <Setter Target="ContentViewbox.Height" Value="16"/>
                                            <Setter Target="ContentViewbox.Margin" Value="38,0,12,0"/>
                                            <Setter Target="TextLabel.Visibility" Value="Collapsed"/>
                                            <Setter Target="OverflowTextLabel.Visibility" Value="Visible"/>
                                            <Setter Target="OverflowTextLabel.Margin" Value="76,0,12,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="OverflowTextLabel"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundDisabled}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushDisabled}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="OverflowNormal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="OverflowPressed">
                                        <VisualState.Setters>
                                            <Setter Target="Root.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}"/>
                                            <Setter Target="Root.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}"/>
                                            <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                            <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <PointerDownThemeAnimation Storyboard.TargetName="ContentRoot"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="InputModeStates">
                                    <VisualState x:Name="InputModeDefault"/>
                                    <VisualState x:Name="TouchInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="0,11,0,13"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="GameControllerInputMode">
                                        <VisualState.Setters>
                                            <Setter Target="OverflowTextLabel.Padding" Value="0,11,0,13"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="ContentRoot">

                                
                                <ContentPresenter x:Name="Content" Content="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                               
                                <TextBlock x:Name="TextLabel" AutomationProperties.AccessibilityView="Raw" Foreground="{TemplateBinding Foreground}" FontSize="12" FontFamily="{TemplateBinding FontFamily}" Margin="2,0,2,6" Grid.Row="1" TextAlignment="Center" TextWrapping="Wrap" Text="{TemplateBinding Label}"/>
                                <TextBlock x:Name="OverflowTextLabel" AutomationProperties.AccessibilityView="Raw" Foreground="{TemplateBinding Foreground}" FontSize="15" FontFamily="{TemplateBinding FontFamily}" HorizontalAlignment="Stretch" Margin="12,0,12,0" Padding="0,5,0,7" TextAlignment="Left" TextWrapping="NoWrap" Text="{TemplateBinding Label}" TextTrimming="Clip" Visibility="Collapsed" VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Page.Resources>
    <Grid Background="{ThemeResource DeepBG}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ResponsiveUI_VisualStates">
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MessageArea.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>0</Thickness>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mid">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="ResponsiveUI_M_Trigger" MinWindowWidth="569"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Servers.(SplitView.CompactPaneLength)" Value="64"/>
                        <Setter Target="Servers.(SplitView.DisplayMode)" Value="CompactOverlay"/>
                        <Setter Target="Servers.(SplitView.IsPaneOpen)" Value="False"/>
                        <Setter Target="MessageArea.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>64,0,0,0</Thickness>
                            </Setter.Value>
                        </Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Large">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="ResponsiveUI_L_Trigger" MinWindowWidth="768"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Servers.(SplitView.DisplayMode)" Value="CompactInline"/>
                        <Setter Target="Servers.(SplitView.IsPaneOpen)" Value="True"/>
                        <Setter Target="MessageArea.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>320,0,0,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="Servers.(SplitView.CompactPaneLength)" Value="64"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VeryLarge">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="ResponsiveUI_XL_Trigger" MinWindowWidth="1024"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="Servers.(SplitView.IsPaneOpen)" Value="True"/>
                        <Setter Target="Servers.(SplitView.DisplayMode)" Value="CompactInline"/>
                        <Setter Target="MessageArea.(FrameworkElement.Margin)">
                            <Setter.Value>
                                <Thickness>320,0,240,0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="Members.(SplitView.DisplayMode)" Value="Inline"/>
                        <Setter Target="Members.(SplitView.IsPaneOpen)" Value="True"/>
                        <Setter Target="Servers.(FrameworkElement.VerticalAlignment)" Value="Stretch"/>
                        <Setter Target="Servers.(SplitView.CompactPaneLength)" Value="64"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="AppBarAlignment_VisualStates">
                <VisualState x:Name="AppBarAlignment_Top">
                    <VisualState.Setters>
                        <Setter Target="commandBar.(Grid.Row)" Value="1"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="AppBarAlignment_Bottom">
                    <VisualState.Setters>
                        <Setter Target="commandBar.(Grid.Row)" Value="3"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid x:Name="content">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid x:Name="TitleBarContent" Visibility="Collapsed" Height="32" Background="{ThemeResource DarkBG}" Grid.ColumnSpan="3">
                <StackPanel x:Name="DraggableTitleBar" Orientation="Horizontal" Background="Transparent">
                    <TextBlock Text="Discord UWP" VerticalAlignment="Center" Margin="12,0,0,0"/>
                    <Border Visibility="Visible" x:Name="NotificationBorder" Background="#f04747" CornerRadius="4" Grid.Column="1" Margin="6,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Right">
                        <TextBlock x:Name="NotificationCounter" Text="1" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="6,0,6,1" FontSize="12"/>
                    </Border>
                </StackPanel>
                <AppBarButton x:Name="CompactOverlayToggle" HorizontalAlignment="Right" Style="{StaticResource AppBarButtonStyle1}" VerticalAlignment="Stretch" Click="CompactOverlayToggle_Click">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="&#xE191;"/>
                    </AppBarButton.Icon>
                </AppBarButton>
            </Grid>
            <Grid x:Name="MessageArea" Background="{ThemeResource DeepBG}" Grid.Column="2" Margin="0"  Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid x:Name="ChannelInfo" Margin="12,6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="ChannelName" Text="blurb" FontWeight="Bold" Margin="0,0,12,0"/>
                    <md:MarkdownTextBlock x:Name="ChannelTopic" FontSize="13" Foreground="{ThemeResource ButtonBackgroundPressed}" FontFamily="Assets/emojifont.ttf#Twitter Color Emoji" Margin="0,7,0,0" Grid.Column="1"/>
                    <Rectangle Width="32" Grid.Column="1" HorizontalAlignment="Right">
                        <Rectangle.Fill>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop/>
                                <!--<GradientStop Color="{ThemeResource DeepBG}" Offset="1"/>-->
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                </Grid>
                <!-- <ScrollViewer x:Name="message_scroller" Grid.Row="1" ViewChanged="ScrollViewer_ViewChanged">-->
                <tk:PullToRefreshListView x:Name="Messages" SelectionMode="None" Grid.Row="1" RefreshRequested="Messages_RefreshRequested">
                    <tk:PullToRefreshListView.RefreshIndicatorContent>
                        <TextBlock Text="Load More Messages" HorizontalAlignment="Center"/>
                    </tk:PullToRefreshListView.RefreshIndicatorContent>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsStackPanel VerticalAlignment="Bottom" ItemsUpdatingScrollMode="KeepLastItemInView"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="MinHeight" Value="0"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="local:MessageContainer">
                            <local:MessageControl Message="{Binding Message, Mode=TwoWay, FallbackValue=null}" IsAdvert="{Binding IsAdvert, Mode=TwoWay, FallbackValue=False}" Header="{Binding Header, Mode=TwoWay, FallbackValue=null}" IsContinuation="{Binding IsContinuation, Mode=TwoWay, FallbackValue=False}"/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Footer>
                        <Grid Height="22" Margin="0,0,0,0">
                            <TextBlock Margin="12,-12.1,12,0" x:Name="NoMessageChached" Text="No messages cached" TextWrapping="Wrap" Foreground="{ThemeResource SystemControlBackgroundBaseMediumBrush}" HorizontalAlignment="Center" Visibility="Collapsed"/>
                            <ProgressBar x:Name="MessagesLoading" Foreground="{ThemeResource Blurple}" Margin="0" IsIndeterminate="True" Background="#00000000" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                        </Grid>
                    </ListView.Footer>
                </tk:PullToRefreshListView>
                <!-- </ScrollViewer>-->
                <Grid x:Name="SendMessage" Grid.Row="2" Padding="12,16,12,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle Fill="White" Height="1" Grid.ColumnSpan="3" VerticalAlignment="Top" Margin="24,-16,24,0" Opacity="0.5"/>
                    <controls:MessageBox x:Name="MessageBox1" Grid.ColumnSpan="3" TextChanged="TypingStarted" Send="CreateMessage"/>
                    <StackPanel x:Name="TypingStackPanel" Opacity="0" Grid.Row="1"  Grid.ColumnSpan="3" Orientation="Horizontal" Height="32">
                        <controls:TypingIndicator x:Name="typingIndicator" VerticalAlignment="Center"/>
                        <TextBlock x:Name="TypingIndicator" Grid.Row="1" Grid.ColumnSpan="3" FontSize="12" Margin="12,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </Grid>
            <Rectangle x:Name="ContentCache" IsHitTestVisible="False" Opacity="0" Fill="Black" Grid.Column="2" Margin="0"  Grid.Row="2"/>

            <SplitView Name="Servers" DisplayMode="Overlay"  Grid.ColumnSpan="3" CompactPaneLength="320" Grid.Row="2" PaneClosing="SP_PaneClosing" Margin="0,0,-50,0" Style="{StaticResource DiscordSplitView}">
                <SplitView.Pane>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="64"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <ListView x:Name="ServerList" SelectionChanged="CatchServerSelection" Grid.Row="0" Background="{ThemeResource DarkBG}" ItemContainerStyle="{StaticResource ServerIconStyle}" IsItemClickEnabled="True" ItemClick="ServerList_ItemClick" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <controls:GuildControl Id="{Binding Id}" 
                                                           Name="{Binding Name}"
                                                           ImageUrl="{Binding ImageURL}"
                                                           NotificationCount="{Binding NotificationCount}"
                                                           IsUnread="{Binding IsUnread}"
                                                           IsMuted="{Binding IsMuted}"
                                                           IsDM="{Binding IsDM}"
                                                           Margin="10,0,0,0"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            
                            <ListView.Footer>
                                <Button Padding="0" Height="64" Width="64" Background="Transparent" Click="AddServer" Style="{StaticResource DiscordButton}">
                                    <Button.Content>
                                        <Grid>
                                            <Rectangle Height="48" Width="48" RadiusX="30" RadiusY="30" Stroke="{ThemeResource Blurple}"/>
                                            <SymbolIcon Symbol="Add"/>
                                        </Grid>
                                    </Button.Content>
                                </Button>
                            </ListView.Footer>

                        </ListView>

                        <!--<ListViewItem Height="64" Width="64" MinWidth="0" Tag="DMs" HorizontalContentAlignment="Center" FontFamily="Segoe MDL2 Assets" Content="" FontSize="22"/>-->
                        <Grid x:Name="ChannelListParent" Grid.Column="1" Grid.Row="0" Background="{ThemeResource LightBG}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="ServerName" TextWrapping="Wrap" Padding="16,12,12,12" FontSize="17" Margin="0,0,0,1" Text="Name" Tapped="ServerName_Tapped"/>
                            <ScrollViewer x:Name="Channels" Padding="0" Grid.Row="1">
                                <StackPanel>
                                    <ListView x:Name="TextChannels" SelectionChanged="LoadChannelMessages" ItemContainerStyle="{StaticResource ChannelItemStyle}" CanDragItems="False" CanReorderItems="False" AllowDrop="False">
                                        <ListView.Header>
                                            <TextBlock Text="TEXT CHANNELS" FontWeight="Bold" Margin="16,12,0,12"/>
                                        </ListView.Header>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <controls:ChannelControl Id="{Binding Id}" 
                                                                         Name="{Binding Name}" 
                                                                         UserStatus="{Binding UserStatus}" 
                                                                         Subtitle="{Binding Subtitle}" 
                                                                         ImageUrl="{Binding ImageURL}" 
                                                                         Type="{Binding Type}" 
                                                                         NotificationCount="{Binding NotificationCount}" 
                                                                         IsUnread="{Binding IsUnread}" 
                                                                         IsTyping="{Binding IsTyping}" 
                                                                         IsMuted="{Binding IsMuted}"/>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <ListViewItem x:Name="AddChannelButton" Height="50" Tapped="AddChannel">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE109;" FontSize="22" Padding="0,0,15,0"/>
                                            <TextBlock Text="Add Channel"/>
                                        </StackPanel>
                                    </ListViewItem>
                                    <TextBlock x:Name="NoGuildChannelsCached" Text="No channels cached" Foreground="{ThemeResource SystemControlBackgroundBaseMediumBrush}" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                    <ProgressRing x:Name="ChannelsLoading" Foreground="{StaticResource Blurple}"></ProgressRing>
                                    <ListView x:Name="VoiceChannels" SelectionChanged="LoadChannelMessages" ItemContainerStyle="{StaticResource ChannelItemStyle}">
                                        <ListView.Header>
                                            <TextBlock Text="VOICE CHANNELS" FontWeight="Bold" Margin="16,12,0,12"/>
                                        </ListView.Header>
                                    </ListView>
                                    <ListViewItem x:Name="Upvote" Tapped="Upvote_Tapped">
                                        <StackPanel>
                                            <TextBlock Text="Upvote this for Voice Channels" FontWeight="Bold"/>
                                            <TextBlock Text="This is requesting from Microsoft the required resources for the Developer to add Voice Channels. This is not merely enabling them" TextWrapping="WrapWholeWords" FontWeight="Light"/>
                                        </StackPanel>
                                    </ListViewItem>
                                </StackPanel>
                            </ScrollViewer>
                            <ScrollViewer x:Name="DMs" Grid.Column="1" Visibility="Collapsed" Grid.Row="1">
                                <StackPanel>
                                    <ListView x:Name="DirectMessageChannels" ItemContainerStyle="{StaticResource ChannelItemStyle}" SelectionChanged="LoadDmChannelMessages">
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <controls:ChannelControl Id="{Binding Id}" 
                                                                         Name="{Binding Name}" 
                                                                         UserStatus="{Binding UserStatus}" 
                                                                         Subtitle="{Binding Subtitle}"
                                                                         Playing="{Binding Playing}"
                                                                         ImageUrl="{Binding ImageURL}" 
                                                                         Type="{Binding Type}" 
                                                                         NotificationCount="{Binding NotificationCount}" 
                                                                         IsUnread="{Binding IsUnread}" 
                                                                         IsTyping="{Binding IsTyping}" 
                                                                         IsMuted="{Binding IsMuted}"/>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                    <TextBlock x:Name="NoDMSCached" Text="No channels cached" Foreground="{ThemeResource SystemControlBackgroundBaseMediumBrush}" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                    <ProgressRing x:Name="DMsLoading"></ProgressRing>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                        <Grid Grid.Row="2" Background="{ThemeResource MidBG}" Grid.ColumnSpan="2">
                            <Button x:Name="UserFlyoutBtn" BorderThickness="0" Background="Transparent" Padding="0" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                                <Button.Flyout>
                                    <Flyout  FlyoutPresenterStyle="{StaticResource FlyoutPresenterStyle1}">
                                        <StackPanel Padding="12" Width="280">
                                            <AppBarButton Width="48" Height="48" HorizontalAlignment="Right" Icon="Setting" Margin="0,-12,-12,0" Click="AppBarButton_Click_1"/>
                                            <Rectangle x:Name="LargeAvatar" Width="128" Height="128" RadiusX="64" RadiusY="64" Margin="0,-36,0,0"/>
                                            <TextBlock x:Name="LargeUsername" FontSize="18" FontWeight="SemiLight" Text="{Binding Text, ElementName=Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Margin="0,6,0,0"/>
                                            <TextBlock x:Name="LargeDiscriminator" Text="{Binding Text, ElementName=Discriminator, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontWeight="SemiBold" Opacity="0.5" FontSize="13" HorizontalAlignment="Center"/>
                                            <RadioButton x:Name="UserStatusOnline" IsChecked="True" Foreground="#43b581" GroupName="status" Content="Online" Style="{StaticResource DiscordRadioButton}" Checked="UserStatus_Checked"/>
                                            <RadioButton x:Name="UserStatusIdle" Foreground="#faa61a" GroupName="status" Content="Idle" Style="{StaticResource DiscordRadioButton}" Checked="UserStatus_Checked"/>
                                            <RadioButton x:Name="UserStatusDND" Foreground="#f04747" GroupName="status" Tag="You will receive no notifications" Content="Do not disturb"  Style="{StaticResource DiscordRadioButton}" Checked="UserStatus_Checked"/>
                                            <RadioButton x:Name="UserStatusInvisible" Foreground="#747f8d" GroupName="status" Tag="You will appear offline to other users, but will still get normal Discord features" Content="Invisible"  Style="{StaticResource DiscordRadioButton}" Checked="UserStatus_Checked"/>
                                            <Grid Visibility="Collapsed" Width="256" Margin="0,6,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="Playing" VerticalAlignment="Center" Padding="0,0,4,0" Margin="0" UseLayoutRounding="False"/>
                                                <TextBox x:Name="Playing" PlaceholderText="Game" Margin="4,0,0,0"  Style="{StaticResource TextBoxStyle1}" Padding="6,6,6,0" HorizontalContentAlignment="Stretch" Grid.Column="1" BorderThickness="0,0,0,2" LostFocus="Playing_OnLostFocus"/>
                                            </Grid>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Bottom" Margin="8">
                                    <Rectangle x:Name="Avatar" Width="48" Height="48" RadiusX="48" RadiusY="48" Margin="0">
                                        <Rectangle.Fill>
                                            <ImageBrush Stretch="Uniform" ImageSource="Assets/Square44x44Logo.png"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <StackPanel VerticalAlignment="Center" Margin="12,0,0,0">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Name="Username" Text="Username" FontWeight="Bold"/>
                                            <TextBlock x:Name="Discriminator" Text="Discriminator" Opacity="0.5" Margin="6,0,0,0"/>
                                        </StackPanel>
                                    </StackPanel>
                                </StackPanel>
                            </Button>
                        </Grid>
                    </Grid>
                </SplitView.Pane>
            </SplitView>

            <SplitView Name="Members" Grid.ColumnSpan="3" PanePlacement="Right" PaneBackground="{ThemeResource LightBG}" Style="{StaticResource DiscordSplitView}" DisplayMode="Overlay" Grid.Row="2" PaneClosing="SP_PaneClosing" OpenPaneLength="240">
                <SplitView.Pane>
                    <SemanticZoom>
                        <SemanticZoom.ZoomedInView>
                            <ListView x:Name="MembersListView" ItemsSource="{Binding Source={StaticResource MembersCvs}, UpdateSourceTrigger=PropertyChanged}" SelectionMode="None" Margin="6,0,0,0" IsItemClickEnabled="True">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <controls:MemberControl DisplayedMember="{Binding Value}" Foreground="{Binding Value.MemberDisplayedRole.Brush}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.GroupStyle>
                                    <GroupStyle HidesIfEmpty="True">
                                        <GroupStyle.HeaderContainerStyle>
                                            <Style TargetType="ListViewBaseHeaderItem">
                                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                            </Style>
                                        </GroupStyle.HeaderContainerStyle>
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate>
                                                <Grid VerticalAlignment="Top">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Key.Name}" FontSize="13" FontWeight="SemiBold" Foreground="{ThemeResource InvertedBG}" Opacity="0.75" Margin="0"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Key.Membercount}" FontSize="13" FontWeight="SemiBold" Foreground="{ThemeResource InvertedBG}" Opacity="0.35"/>
                                                </Grid>
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </ListView.GroupStyle>
                            </ListView>
                        </SemanticZoom.ZoomedInView>
                        <SemanticZoom.ZoomedOutView>
                            <ListView ItemsSource="{Binding Source={StaticResource MembersCvs}, Path=CollectionGroups}" Margin="0" >
                                <ListView.Background>
                                    <SolidColorBrush Color="{ThemeResource SystemAltHighColor}" Opacity="0.1"/>
                                </ListView.Background>
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsStackPanel VerticalAlignment="Center"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Group.Key.Name}" FontSize="13" FontWeight="SemiBold" Foreground="{Binding Group.Key.Brush}" Opacity="0.75"/>
                                            <TextBlock Grid.Column="1" Margin="6,0,0,0" Text="{Binding Group.Key.Membercount}" FontSize="13" FontWeight="SemiBold" Foreground="{ThemeResource InvertedBG}" Opacity="0.35"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.Footer>
                                    <Rectangle Height="48"/>
                                </ListView.Footer>
                            </ListView>
                        </SemanticZoom.ZoomedOutView>
                    </SemanticZoom>
                </SplitView.Pane>
            </SplitView>

            <SplitView x:Name="CreateChannel" PanePlacement="Right" Grid.ColumnSpan="3" PaneBackground="{ThemeResource DeepBG}" Grid.Row="2"  PaneClosing="SP_PaneClosing">
                <SplitView.Pane>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Pivot Grid.ColumnSpan="2" Margin="0,0,0,32">
                            <PivotItem Header="Overview">
                                <TextBox x:Name="CreateChannelName" Header="Channel Name" VerticalAlignment="Top" BorderThickness="1"/>
                            </PivotItem>
                        </Pivot>
                        <Button Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Content="Save" Click="SaveCreateChannel" Style="{StaticResource DiscordButton}" Background="{ThemeResource Blurple}" Margin="12,0,4,12"/>
                        <Button Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Content="Cancel" Grid.Column="1" Click="CloseCreateChannel" Style="{StaticResource DiscordButton}" Margin="6,0,12,12"/>
                    </Grid>
                </SplitView.Pane>
            </SplitView>

            <CommandBar x:Name="commandBar" Grid.ColumnSpan="3" Background="{ThemeResource DarkBG}" Style="{StaticResource CommandBarStyle1}" Grid.Row="1">
                <AppBarButton x:Name="MemberListToggle" Icon="People" Label="Member List" Click="TogglePeopleShow"/>
                <AppBarButton x:Name="PinnedMessageToggle" Icon="Pin" Label="Pinned Messages" Click="TogglePinnedShow">
                    <AppBarButton.Flyout>
                        <Flyout FlyoutPresenterStyle="{StaticResource FlyoutPresenterStyle1}">
                            <ListView x:Name="PinnedMessages" SelectionMode="None">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Setter Property="MinHeight" Value="0"/>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <local:MessageControl Message="{Binding Message}" MoreButtonVisibility="Collapsed" IsAdvert="{Binding IsAdvert}" Header="{Binding Header}" IsContinuation="{Binding IsContinuation}"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.Footer>
                                    <StackPanel>
                                        <Rectangle Height="24"/>
                                        <ProgressBar x:Name="PinnedMessagesLoading" Foreground="{ThemeResource Blurple}" Margin="0" IsIndeterminate="True" Background="#00000000" VerticalAlignment="Bottom" Visibility="Collapsed"/>
                                    </StackPanel>
                                </ListView.Footer>
                            </ListView>
                        </Flyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarToggleButton x:Name="MuteToggle" Icon="Mute" Label="Mute Channel" Click="MuteAChannel"/>
                <AppBarButton x:Name="RefreshButton" Icon="Refresh" Label="Refresh" Click="Refresh"/>
                <CommandBar.Content>
                    <AppBarButton Click="ToggleServerListFull" Width="64" Label="">
                        <AppBarButton.Icon>
                            <FontIcon Glyph="&#xE700;"/>
                        </AppBarButton.Icon>
                    </AppBarButton>
                </CommandBar.Content>
                <CommandBar.SecondaryCommands>
                    <AppBarButton Label="About + Changelog" Click="OpenWhatsNew"/>
                    <AppBarButton x:Name="IAPSButton" Label="In-App Purchases" Click="OpenIaPs"/>
                    <AppBarButton Label="Settings" Click="OpenUserSettings"/>
                </CommandBar.SecondaryCommands>
            </CommandBar>
        </Grid>
        <Frame x:Name="SubFrame" Grid.RowSpan="4" Grid.ColumnSpan="4" Visibility="Collapsed" Canvas.ZIndex="9999">
            <Frame.RenderTransform>
                <ScaleTransform x:Name="SubFrameScale"/>
            </Frame.RenderTransform>
        </Frame>

        <controls:LoadingControl x:Name="LoadingSplash" Visibility="Collapsed" Grid.RowSpan="10" Grid.Column="10"/>
    </Grid>
</Page>

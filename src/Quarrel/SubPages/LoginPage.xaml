<UserControl
    x:Class="Quarrel.SubPages.LoginPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Quarrel.SubPages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:qb="using:Quarrel.Behaviors"
    xmlns:qc="using:Quarrel.Controls"
    xmlns:convert="using:Quarrel.Converters"
    xmlns:spvm="using:Quarrel.ViewModels.SubPages"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="800">

    <Grid Background="{ThemeResource PrimaryPaneBackground}">
        <!--Disclaimer-->
        <StackPanel Visibility="{x:Bind convert:VisibleWhenEqualConverter.Convert(ViewModel.PageState, spvm:LoginPageState.Discord), Mode=OneWay}" Margin="12" HorizontalAlignment="Center" VerticalAlignment="Top" Opacity=".6">
            <TextBlock x:Uid="Login/Disclaimer1TB" Text="Logging in will intercept a token that allows Quarrel to interact with Discord through your account."
                       FontSize="10" TextAlignment="Center"/>
            <TextBlock x:Uid="Login/Disclaimer2TB" Text="At no point does Quarrel read your password."
                       FontSize="10" TextAlignment="Center"/>
        </StackPanel>
        <StackPanel Visibility="{x:Bind convert:VisibleWhenEqualConverter.Convert(ViewModel.PageState, spvm:LoginPageState.Quarrel), Mode=OneWay}" VerticalAlignment="Center" MaxWidth="360">
            <StackPanel.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition FromVerticalOffset="-800"/>
                </TransitionCollection>
            </StackPanel.Transitions>
            <Grid Padding="16" Height="96">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                
                <qc:QuarrelIcon Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"
                                Height="64" Width="64" HorizontalAlignment="Left"/>

                <TextBlock x:Uid="Login/QuarrelTB" Text="Quarrel" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" Grid.Column="1"
                           FontSize="46" CharacterSpacing="250" HorizontalAlignment="Right"/>
            </Grid>

            <Button x:Uid="Login/LoginBTN" Content="Login" HorizontalAlignment="Stretch" Foreground="{ThemeResource SystemChromeLowColor}"
                    Command="{x:Bind ViewModel.GoToDiscordLoginCommand}"
                    TabIndex="1"
                    Style="{StaticResource DiscordButton}">
                <Button.Transitions>
                    <TransitionCollection>
                        <EntranceThemeTransition FromVerticalOffset="250"/>
                    </TransitionCollection>
                </Button.Transitions>
            </Button>
        </StackPanel>
        <StackPanel Visibility="{x:Bind convert:VisibleWhenEqualConverter.Convert(ViewModel.PageState, spvm:LoginPageState.Token), Mode=OneWay}" VerticalAlignment="Center" MaxWidth="360">
            <Grid Height="96">
                <TextBox x:Uid="Login/TokenTBox" PlaceholderText="Token" Margin="16"
                         Text="{x:Bind ViewModel.TokenText, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Style="{StaticResource DiscordTextBox}" VerticalAlignment="Center"/>
            </Grid>
            <Button x:Uid="Login/LoginBTN" Content="Login" HorizontalAlignment="Stretch" Foreground="{ThemeResource SystemChromeLowColor}"
                    Command="{x:Bind ViewModel.LoginWithTokenCommand}"
                    TabIndex="1"
                    Style="{StaticResource DiscordButton}"/>
        </StackPanel>
        <WebView x:Name="CaptchaView" Source="{x:Bind NavigationUrl}"  NavigationCompleted="CaptchaView_NavigationCompleted" Margin="48" Visibility="{x:Bind convert:VisibleWhenEqualConverter.Convert(ViewModel.PageState, spvm:LoginPageState.Discord), Mode=OneWay}"/>

        <HyperlinkButton x:Uid="Login/PrivacyPolicyHLBTN"
                         Content="Privacy Policy"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Bottom"
                         TabIndex="2" Margin="24,32,0,12">
            <Interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="Click">
                    <qb:OpenFlyoutAction/>
                </core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
            <FlyoutBase.AttachedFlyout>
                <Flyout>
                    <TextBlock>
                        <Run>Quarrel is in absolutely no way endorsed by Discord, Inc.</Run>
                        <LineBreak/>
                        <Run>Quarrel guarantees that none of your personal data exists elsewhere than on your device.</Run>
                    </TextBlock>
                </Flyout>
            </FlyoutBase.AttachedFlyout>
        </HyperlinkButton>
        
        <HyperlinkButton x:Uid="Login/TokenLoginHLBTN"
                         Content="Login with Token"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Bottom"
                         TabIndex="2" Margin="0,32,24,12"
                         Visibility="{x:Bind convert:VisibleWhenEqualConverter.Convert(ViewModel.PageState, spvm:LoginPageState.Quarrel), Mode=OneWay}"
                         Command="{x:Bind ViewModel.GoToTokenLoginCommand}"/>

        <HyperlinkButton x:Uid="Login/GoBackHLBTN"
                         Content="Go Back"
                         HorizontalAlignment="Right"
                         VerticalAlignment="Bottom"
                         TabIndex="2" Margin="0,32,24,12"
                         Visibility="{x:Bind convert:VisibleWhenNotEqualConverter.Convert(ViewModel.PageState, spvm:LoginPageState.Quarrel), Mode=OneWay}"
                         Command="{x:Bind ViewModel.GoBackCommand}"/>
    </Grid>
</UserControl>

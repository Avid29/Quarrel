<UserControl
    x:Class="Quarrel.Controls.Guilds.GuildTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Quarrel.Controls.Guilds"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:animations="using:Microsoft.Toolkit.Uwp.UI.Animations"
    xmlns:convertbase="using:Quarrel.Converters.Base"
    xmlns:convertguild="using:Quarrel.Converters.Guild"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    mc:Ignorable="d"
    d:DesignHeight="60"
    d:DesignWidth="72"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls">
    <UserControl.Resources>
        <Storyboard x:Name="ShowBadge">
            <DoubleAnimation Duration="0:0:0.6" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="0:0:0.6" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="NotificationCounter" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <Storyboard x:Name="HideBadge">
            <DoubleAnimation Duration="0:0:0.6" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Duration="0:0:0.6" To="24" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="NotificationCounter" d:IsOptimized="True">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <convertbase:NotBoolToVisibilityConverter x:Key="NotBoolToVisibilityConverter"/>
        <convertbase:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
        <convertguild:IsDMToFontFamilyConverter x:Key="IsDMToFontFamilyConverter"/>
        <convertguild:MutedToOpacityConverter x:Key="MutedToOpacityConverter"/>
    </UserControl.Resources>

    <!--Flyout-->
    <UserControl.ContextFlyout>
        <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
            <MenuFlyoutItem Icon="View" Text="Mark as read" Margin="-24,0,0,0"
                            IsEnabled="{x:Bind ViewModel.IsUnread, Mode=OneWay}" Command="{x:Bind ViewModel.MarkAsRead}"/>
            <ToggleMenuFlyoutItem Text="Mute" Style="{StaticResource GuildToggleButtonFlyoutItemStyle}"
                                  IsChecked="{x:Bind ViewModel.Muted, Mode=OneWay}" Visibility="{x:Bind ViewModel.IsDM, Converter={StaticResource NotBoolToVisibilityConverter}, Mode=OneWay}" Command="{x:Bind ViewModel.MuteGuildCommand, Mode=OneWay}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Icon="Setting" Text="Server Settings" Margin="-24,0,0,0"
                            Command="{x:Bind ViewModel.OpenGuildSettings, Mode=OneWay}"/>
            <MenuFlyoutSeparator/>
            <MenuFlyoutItem Icon="Copy" Text="Copy Id" Margin="-24,0,0,0"
                            Command="{x:Bind ViewModel.CopyId, Mode=OneWay}"/>
        </MenuFlyout>
    </UserControl.ContextFlyout>

    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" Padding="0,4" Margin="5,0,0,0">
        <Grid Width="50" Height="50">
            
            <!--Selected Highlight-->
            <Border x:Name="SelectIndicator" Opacity="0" BorderThickness="3,0,0,0" HorizontalAlignment="Stretch" Margin="-12,-6">
                <Border.Background>
                    <SolidColorBrush Opacity="0.2" Color="{ThemeResource SystemAccentColor}"/>
                </Border.Background>
            </Border>
            
            <!--Unread-->
            <Border x:Name="UnreadIndicator" Visibility="{x:Bind ViewModel.ShowUnread, Mode=OneWay}" Height="12" Width="2" Opacity="0.75" Background="{ThemeResource Foreground}" Margin="-12,2,4,0" HorizontalAlignment="Left"/>

            <!--Icon-->
            <Rectangle Visibility="{x:Bind ViewModel.IsDM, Converter={StaticResource NotBoolToVisibilityConverter}, Mode=OneWay}" x:Name="GuildImageBackdrop" Width="50" Height="50" RadiusX="25" RadiusY="25" Fill="{ThemeResource Foreground}" Opacity="0.1"/>
            <Border x:Name="GuildImage" CornerRadius="25" Width="50" Height="50" Visibility="{x:Bind ViewModel.HasIcon, Mode=OneWay}" Opacity="{x:Bind ViewModel.ShowMute, Converter={StaticResource MutedToOpacityConverter}, Mode=OneWay}">
                <animations:Implicit.Animations>
                    <animations:OpacityAnimation Duration="0:0:0.3"/>
                </animations:Implicit.Animations>
                <controls:RoundImageEx Width="50" DecodePixelWidth="50" Source="{x:Bind ViewModel.IconUrl, Mode=OneWay}"/>
            </Border>
            <TextBlock x:Name="InvalidOverlay" Visibility="Collapsed" Text="" FontFamily="Segoe MDL2 Assets" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <!--Text Icon placeholder-->
            <TextBlock Visibility="{x:Bind ViewModel.HasIcon, Converter={StaticResource NotBoolToVisibilityConverter}, Mode=OneWay}" Foreground="{ThemeResource Foreground}" 
                   Text="{x:Bind ViewModel.DisplayText, Mode=OneWay}" FontFamily="{x:Bind ViewModel.IsDM, Converter={StaticResource IsDMToFontFamilyConverter}, Mode=OneWay}"
                   HorizontalAlignment="Center" VerticalAlignment="Center" 
                   FontSize="24" FontWeight="Light" Margin="0,-2,0,0"/>

            <!--Notificiation Count-->
            <Border x:Name="border" Visibility="{x:Bind ViewModel.NotificationCount, Converter={StaticResource NotNullToVisibilityConverter}, Mode=OneWay}" Margin="0,0,-12,0" VerticalAlignment="Bottom">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation Duration="0:0:0.3" To="1"/>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation Duration="0:0:0.3" To="0"/>
                </animations:Implicit.HideAnimations>
                <Border.Background>
                    <LinearGradientBrush EndPoint="0,0" StartPoint="1,0" ColorInterpolationMode="ScRgbLinearInterpolation">
                        <GradientStop Offset="0.9" Color="#00000000"/>
                        <GradientStop Color="{ThemeResource SystemAccentColor}" Offset="0"/>
                    </LinearGradientBrush>
                </Border.Background>
                <TextBlock x:Name="NotificationCounter" Text="{x:Bind ViewModel.NotificationCount, Mode=OneWay}" Foreground="White" FontWeight="SemiBold" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="4,0,4,2" FontSize="15" RenderTransformOrigin="0.5,0.5">
                    <animations:Implicit.ShowAnimations>
                        <animations:TranslationAnimation Duration="0:0:0.3" From="24" To="0"/>
                    </animations:Implicit.ShowAnimations>
                    <animations:Implicit.HideAnimations>
                        <animations:TranslationAnimation Duration="0:0:0.3" From="0" To="24"/>
                    </animations:Implicit.HideAnimations>
                </TextBlock>
            </Border>

            <!--Mute Icon-->
            <SymbolIcon Visibility="{x:Bind ViewModel.ShowMute, Mode=OneWay}" Canvas.ZIndex="20" Symbol="Mute" Foreground="{ThemeResource Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="2,2,0,0">
                <animations:Implicit.ShowAnimations>
                    <animations:OpacityAnimation Duration="0:0:0.3" From="0" To="1"/>
                </animations:Implicit.ShowAnimations>
                <animations:Implicit.HideAnimations>
                    <animations:OpacityAnimation Duration="0:0:0.3" From="1" To="0"/>
                </animations:Implicit.HideAnimations>
            </SymbolIcon>
        </Grid>
    </Grid>
</UserControl>

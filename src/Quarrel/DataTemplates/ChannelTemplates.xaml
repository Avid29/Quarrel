<ResourceDictionary
    x:Class="Quarrel.DataTemplates.ChannelTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ccontrols="using:Quarrel.Controls.DataTemplates"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:bconvert="using:Quarrel.Converters.Common.Boolean"
    xmlns:vconvert="using:Quarrel.Converters.Common.Visible"
    xmlns:cconvert="using:Quarrel.Converters.Discord.Channels"
    xmlns:tt="using:Microsoft.Toolkit.Uwp.UI.Triggers"
    xmlns:a="using:Quarrel.Attached"
    xmlns:cenums="using:Discord.API.Models.Enums.Channels"
    xmlns:bcenums="using:Quarrel.Bindables.Channels.Enums"
    xmlns:bindablechannels="using:Quarrel.Bindables.Channels">

    <Style x:Key="TextChannelStyle" TargetType="ccontrols:ChannelControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ccontrols:ChannelControl">
                    <Grid Height="40">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ReadState">
                                <VisualState x:Name="Read">
                                    <VisualState.Setters>
                                        <Setter Target="ChannelName.Opacity" Value="0.7"/>
                                        <Setter Target="TextIcon.Opacity" Value="0.7"/>
                                        <!--<Setter Target="NewsIcon.Opacity" Value="0.7"/>-->
                                        <Setter Target="UnreadIndicator.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Unread">
                                    <VisualState.Setters>
                                        <Setter Target="ChannelName.Opacity" Value="1"/>
                                        <Setter Target="TextIcon.Opacity" Value="1"/>
                                        <!--<Setter Target="NewsIcon.Opacity" Value="1"/>-->
                                        <Setter Target="UnreadIndicator.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ContextFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem x:Uid="Channel/MarkAsReadMFI" Text="Mark as Read"
                                                Icon="View" Command="{TemplateBinding MarkAsReadCommand}"/>
                                <MenuFlyoutSeparator/>
                                <MenuFlyoutItem x:Uid="Channel/CopyLinkMFI" Text="Copy Link"
                                                Icon="Link" Command="{TemplateBinding CopyLinkCommand}"/>
                                <MenuFlyoutItem x:Uid="Channel/CopyIdMFI" Text="Copy ID"
                                                Command="{TemplateBinding CopyIdCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE8EC;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </Grid.ContextFlyout>

                        <Grid Visibility="{x:Bind IsSelected, Mode=OneWay}" Opacity=".2" Background="{ThemeResource SystemControlBackgroundAccentBrush}"/>

                        <Border x:Name="UnreadIndicator"
                                Visibility="Collapsed"
                                Height="24" Width="2" Margin="2,0,0,0"
                                Background="{ThemeResource InvertedBackground}"
                                HorizontalAlignment="Left"/>

                        <!--Main Details-->
                        <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Margin="0,6" Padding="6,0,-12,0">
                            <FontIcon x:Name="TextIcon" Glyph="#" FontFamily="{StaticResource ContentControlThemeFontFamily}" FontWeight="Light" Margin="6,-2,4,0" FontSize="20"
                                      Foreground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" Opacity="0.7"/>

                            <!--<FontIcon x:Name="NewsIcon" Glyph="&#xE12A;" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontWeight="Light" Margin="6,4,4,0" FontSize="14" VerticalAlignment="Center"
                                      Foreground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" Opacity="0.7"
                                      Visibility="{x:Bind vconvert:VisibleWhenEqualConverter.Convert(TextChannel.Channel.Type, cenums:ChannelType.News)}"/>-->

                            <TextBlock x:Name="ChannelName" Text="{x:Bind ChannelName, Mode=OneWay}" Margin="0,1,0,0" Opacity="0.7"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="TextChannelTemplate" x:DataType="bindablechannels:BindableTextChannel">
        <!--<UserControl>-->
            <!--<VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ReadState">
                    <VisualState x:Name="Read">
                        <VisualState.StateTriggers>
                            <tt:IsEqualStateTrigger Value="{x:Bind ReadState, Mode=OneWay}" To="{x:Bind bcenums:ReadState.Read}"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="UnreadIndicator.Visibility" Value="Collapsed"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Unread">
                        <VisualState.StateTriggers>
                            <tt:IsEqualStateTrigger Value="{x:Bind ReadState, Mode=OneWay}" To="{x:Bind bcenums:ReadState.Unread}"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="UnreadIndicator.Visibility" Value="Visible"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Muted">
                        <VisualState.StateTriggers>
                            <tt:IsEqualStateTrigger Value="{x:Bind ReadState, Mode=OneWay}" To="{x:Bind bcenums:ReadState.Muted}"/>
                        </VisualState.StateTriggers>
                        <VisualState.Setters>
                            <Setter Target="UnreadIndicator.Visibility" Value="Collapsed"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>-->

            <Grid Height="40">
                <Grid.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Channel/MarkAsReadMFI" Text="Mark as Read"
                                    Icon="View" Command="{x:Bind MarkAsReadCommand}"/>
                        <MenuFlyoutSeparator/>
                        <MenuFlyoutItem x:Uid="Channel/CopyLinkMFI" Text="Copy Link"
                                    Icon="Link" Command="{x:Bind CopyLinkCommand}"/>
                        <MenuFlyoutItem x:Uid="Channel/CopyIdMFI" Text="Copy ID"
                                    Command="{x:Bind CopyIdCommand}">
                            <MenuFlyoutItem.Icon>
                                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE8EC;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                    </MenuFlyout>
                </Grid.ContextFlyout>

                <Grid Visibility="{x:Bind IsSelected, Mode=OneWay}" Opacity=".2" Background="{ThemeResource SystemControlBackgroundAccentBrush}"/>

                <Border x:Name="UnreadIndicator"
                    Visibility="{x:Bind MessageChannel.IsUnread, Mode=OneWay}"
                    Height="24" Width="2"
                    Background="{ThemeResource InvertedBackground}"
                    Margin="2,0,0,0"
                    HorizontalAlignment="Left"/>

                <!--Main Details-->
                <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Margin="0,6" Padding="6,0,-12,0">
                    <FontIcon Glyph="#" FontFamily="{StaticResource ContentControlThemeFontFamily}" FontWeight="Light" Margin="6,-2,4,0" FontSize="20"
                          Foreground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" Opacity="{x:Bind cconvert:IsUnreadOpacityConverter.Convert(MessageChannel.IsUnread), Mode=OneWay}" 
                          Visibility="{x:Bind vconvert:VisibleWhenEqualConverter.Convert(Channel.Type, cenums:ChannelType.GuildText)}"/>

                    <FontIcon Glyph="&#xE12A;" FontFamily="{ThemeResource SymbolThemeFontFamily}" FontWeight="Light" Margin="6,4,4,0" FontSize="14" VerticalAlignment="Center"
                          Foreground="{ThemeResource SystemControlHighlightAltBaseHighBrush}" Opacity="{x:Bind cconvert:IsUnreadOpacityConverter.Convert(MessageChannel.IsUnread), Mode=OneWay}"
                          Visibility="{x:Bind vconvert:VisibleWhenEqualConverter.Convert(Channel.Type, cenums:ChannelType.News)}"/>

                    <TextBlock Text="{x:Bind Name, Mode=OneWay}" Margin="0,1,0,0"
                           Opacity="{x:Bind cconvert:IsUnreadOpacityConverter.Convert(MessageChannel.IsUnread), Mode=OneWay}" />
                </StackPanel>
            </Grid>
        <!--</UserControl>-->
    </DataTemplate>

    <DataTemplate x:Key="VoiceChannelTemplate" x:DataType="bindablechannels:BindableVoiceChannel">
        <Grid Height="40" Padding="6,0,0,0">
            <Grid Visibility="{x:Bind IsSelected, Mode=OneWay}" Opacity=".2" Background="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="-6,0,0,0"/>
            <!--Main Details-->
            <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Margin="0,6" Padding="0,0,-18,0">
                <TextBlock Text="" Opacity="{x:Bind cconvert:IsUnreadOpacityConverter.Convert(MessageChannel.IsUnread), Mode=OneWay}"
                           FontSize="14" Margin="6,4,6,6" FontFamily="Segoe MDL2 Assets"/>
                <TextBlock Text="{x:Bind Name, Mode=OneWay}" Opacity="{x:Bind cconvert:IsUnreadOpacityConverter.Convert(MessageChannel.IsUnread), Mode=OneWay}" Margin="0,1,0,0"/>
            </StackPanel>

            <Button Style="{StaticResource TextBlockButtonStyle}"
                    Foreground="{ThemeResource SystemColorHighlightTextBrush}"
                    HorizontalAlignment="Right" Margin="0,0,8,0"
                    Command="{x:Bind OpenChatCommand}">
                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Opacity=".5" Glyph="&#xE15F;" FontSize="14"/>
            </Button>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="DirectChannelTemplate" x:DataType="bindablechannels:BindableDirectChannel">
        <Grid Height="48">
            <Grid Visibility="{x:Bind IsSelected, Mode=OneWay}" Opacity=".2" Background="{ThemeResource SystemControlBackgroundAccentBrush}"/>

            <Border x:Name="UnreadIndicator"
                    Visibility="{x:Bind MessageChannel.IsUnread, Mode=OneWay}"
                    Height="24" Width="2" Margin="2,0,0,0"
                    Background="{ThemeResource InvertedBackground}"
                    HorizontalAlignment="Left"/>

            <!--Main Details-->
            <Grid VerticalAlignment="Center" Margin="0,6" Padding="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Border Margin="8,0" CornerRadius="18">
                    <toolkit:ImageEx Width="36" Height="36" Source="{x:Bind Recipient.AvatarUri, Mode=OneWay}"/>
                </Border>

                <TextBlock Grid.Column="1" Text="{x:Bind Name, Mode=OneWay}" VerticalAlignment="Center"
                           Opacity="{x:Bind cconvert:IsUnreadOpacityConverter.Convert(MessageChannel.IsUnread), Mode=OneWay}"/>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="GroupChannelTemplate" x:DataType="bindablechannels:BindableGroupChannel">
        <Grid Height="48">
            <Grid Visibility="{x:Bind IsSelected, Mode=OneWay}" Opacity=".2" Background="{ThemeResource SystemControlBackgroundAccentBrush}"/>

            <Border x:Name="UnreadIndicator"
                    Visibility="{x:Bind MessageChannel.IsUnread, Mode=OneWay}"
                    Height="24" Width="2" Margin="2,0,0,0"
                    Background="{ThemeResource InvertedBackground}"
                    HorizontalAlignment="Left"/>

            <!--Main Details-->
            <Grid VerticalAlignment="Center" Margin="0,6" Padding="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Border Margin="8,0" CornerRadius="18">
                    <toolkit:ImageEx Width="36" Height="36" Source="{x:Bind IconUrl, Mode=OneWay}"/>
                </Border>

                <StackPanel Grid.Column="1" Opacity="{x:Bind cconvert:IsUnreadOpacityConverter.Convert(MessageChannel.IsUnread), Mode=OneWay}">
                    <TextBlock Text="{x:Bind Name, Mode=OneWay}" VerticalAlignment="Center"/>
                    <TextBlock Text="{x:Bind cconvert:MemberCountConverter.Convert(MemberCount), Mode=OneWay}"
                               FontSize="12" VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CategoryZoomInChannelTemplate" x:DataType="bindablechannels:BindableCategoryChannel">
        <Grid Padding="0">
            <!--Main Details-->
            <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Margin="0,6" Padding="0,0,-18,0">
                <TextBlock Text="{x:Bind Name, Mode=OneWay}" a:TextHelpers.CharacterCasing="Upper" FontSize="16" Opacity=".6" Margin="0,1,0,0"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="CategoryZoomOutChannelTemplate" x:DataType="bindablechannels:BindableCategoryChannel">
        <Grid Height="40" Padding="0">
            <!--Main Details-->
            <StackPanel VerticalAlignment="Center" Orientation="Horizontal" Margin="0,6" Padding="0,0,-18,0">
                <TextBlock Text="{x:Bind Name, Mode=OneWay}" a:TextHelpers.CharacterCasing="Upper" Opacity=".6" Margin="0,1,0,0"/>
            </StackPanel>
        </Grid>
    </DataTemplate>
</ResourceDictionary>

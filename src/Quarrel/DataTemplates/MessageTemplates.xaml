<ResourceDictionary
    x:Class="Quarrel.DataTemplates.MessageTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:tc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:aconvert="using:Quarrel.Converters.Discord.Messages.Attachments"
    xmlns:bconvert="using:Quarrel.Converters.Common.Boolean"
    xmlns:tconvert="using:Quarrel.Converters.Common.Time"
    xmlns:mconvert="using:Quarrel.Converters.Discord.Messages"
    xmlns:qc="using:Quarrel.Controls"
    xmlns:bindablemessages="using:Quarrel.Bindables.Messages"
    xmlns:bindableembeds="using:Quarrel.Bindables.Messages.Embeds"
    xmlns:mselector="using:Quarrel.Selectors.Messages"
    xmlns:markdown="using:Quarrel.Markdown">

    <SolidColorBrush x:Key="AttachmentBackgroundBrush" Color="#1E1E1E"/>
    <SolidColorBrush x:Key="AttachmentBorderBrush" Color="#3C3C3C"/>

    <DataTemplate x:Key="DefaultAttachmentTemplate" x:DataType="bindableembeds:BindableAttachment">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left"
              BorderThickness="1" CornerRadius="4" Padding="8,8,12,8"
              Background="{StaticResource AttachmentBackgroundBrush}"
              BorderBrush="{StaticResource AttachmentBorderBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!--File icon-->
            <HyperlinkButton NavigateUri="{x:Bind Attachment.Url}"
                             HorizontalAlignment="Left">
                <FontIcon Glyph="{x:Bind aconvert:AttachmentIconConverter.Convert(FileExtension)}" FontSize="32"/>
            </HyperlinkButton>

            <!--File name and size-->
            <StackPanel Margin="6,0,12,0" Grid.Column="1">
                <HyperlinkButton Content="{x:Bind Attachment.Filename}" Padding="0"
                                 NavigateUri="{x:Bind Attachment.Url}" FontSize="18"
                                 Style="{StaticResource PlainTextHyperlinkStyle}"/>

                <TextBlock Text="{x:Bind aconvert:HumanizeByteSizeConverter.Convert(Attachment.Size)}"
                           FontSize="11" Opacity="0.5" Margin="0,-2,0,0"/>
            </StackPanel>

            <!--Download button-->
            <HyperlinkButton NavigateUri="{x:Bind Attachment.Url}" Grid.Column="2">
                <FontIcon Glyph="" FontSize="24"/>
            </HyperlinkButton>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ImageAttachmentTemplate" x:DataType="bindableembeds:BindableAttachment">
        <tc:ImageEx
            Source="{x:Bind aconvert:AttachmentConverter.ConvertImageUrl(Attachment.ProxyUrl, Attachment.Width.Value, Attachment.Height.Value, 400, 300)}"
            Width="{x:Bind aconvert:AttachmentConverter.ConvertWidth(Attachment.Width.Value, Attachment.Height.Value, 400, 300)}"
            Height="{x:Bind aconvert:AttachmentConverter.ConvertHeight(Attachment.Width.Value, Attachment.Height.Value, 400, 300)}"
            CornerRadius="2"/>
    </DataTemplate>

    <DataTemplate x:Key="VideoAttachmentTemplate" x:DataType="bindableembeds:BindableAttachment">
        <Grid MaxWidth="400">
            <MediaElement Source="{x:Bind Attachment.ProxyUrl}" AutoPlay="False"
                          AreTransportControlsEnabled="True" AudioCategory="ForegroundOnlyMedia">
                <MediaElement.TransportControls>
                    <MediaTransportControls IsCompact="True" IsFullWindowButtonVisible="False"/>
                </MediaElement.TransportControls>
            </MediaElement>
        </Grid>
    </DataTemplate>

    <mselector:AttachmentTemplateSelector x:Key="AttachmentTemplateSelector"
                                          DefaultAttachmentTemplate="{StaticResource DefaultAttachmentTemplate}"
                                          ImageAttachmentTemplate="{StaticResource ImageAttachmentTemplate}"
                                          AudioAttachmentTemplate="{StaticResource DefaultAttachmentTemplate}"
                                          VideoAttachmentTemplate="{StaticResource VideoAttachmentTemplate}"/>

    <DataTemplate x:Key="DefaultMessageTemplate" x:DataType="bindablemessages:BindableMessage">
        <!--Grid must be wrapped in a user control to enable the VisualStateManager-->
        <UserControl HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                     VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid Background="Transparent"
                  Opacity="{x:Bind mconvert:IsDeletedToOpacityConverter.Convert(IsDeleted), Mode=OneWay}">

                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState x:Name="Default">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{x:Bind bconvert:InverseBoolConverter.Convert(IsContinuation), Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Padding" Value="2,12,2,4"/>
                                <Setter Target="Header.Visibility" Value="Visible"/>
                                <Setter Target="ProfileImageContainer.Visibility" Value="Visible"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Continuation">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{x:Bind IsContinuation, Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Padding" Value="2,2,0,2"/>
                                <Setter Target="Header.Visibility" Value="Collapsed"/>
                                <Setter Target="ProfileImageContainer.Visibility" Value="Collapsed"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Grid.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Message/CopyLinkMFI" Text="Copy Message Link"
                                        Icon="Link" Command="{x:Bind CopyLinkCommand}"/>
                        <MenuFlyoutItem x:Uid="Message/CopyIdMFI" Text="Copy ID"
                                        Command="{x:Bind CopyIdCommand}">
                            <MenuFlyoutItem.Icon>
                                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE8EC;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator Visibility="{x:Bind CanDelete}"/>
                        <MenuFlyoutItem x:Uid="Message/DeleteMFI" Text="Delete" Icon="Delete"
                                        Command="{x:Bind DeleteCommand}"
                                        Foreground="{StaticResource DiscordRedBrush}"
                                        Visibility="{x:Bind CanDelete}"/>
                    </MenuFlyout>
                </Grid.ContextFlyout>

                <Border Visibility="{x:Bind MentionsMe, Mode=OneWay}"
                        Background="#FFFFB400" Opacity=".25" Margin="0"/>

                <Grid x:Name="RootGrid" Padding="2,12,2,4">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="64"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!--Image-->
                    <Border x:Name="ProfileImageContainer" Width="36" Height="36"
                            CornerRadius="18" VerticalAlignment="Top">
                        <tc:ImageEx Source="{x:Bind Author.AvatarUri}"/>
                    </Border>

                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <StackPanel x:Name="Header" Orientation="Horizontal" Margin="0,-2,0,0">
                            <HyperlinkButton Content="{x:Bind Author.User.Username}" Style="{StaticResource PlainTextHyperlinkStyle}"
                                             FontSize="14"/>
                            <TextBlock Text="{x:Bind tconvert:SmartDateTimeFormatConverter.Convert(Message.Timestamp)}"
                                       VerticalAlignment="Center" FontSize="12" Opacity=".5" Margin="6,0"/>
                        </StackPanel>

                        <StackPanel Grid.Row="1">
                            <markdown:MessageRenderer Text="{x:Bind Message.Content, Mode=OneWay}" Context="{x:Bind Mode=OneWay}"
                                                      HorizontalAlignment="Left"/>

                            <ItemsControl ItemsSource="{x:Bind Attachments}"
                                          ItemTemplateSelector="{StaticResource AttachmentTemplateSelector}"
                                          HorizontalAlignment="Left"/>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </UserControl>
    </DataTemplate>

    <DataTemplate x:Key="InfoMessageTemplate" x:DataType="bindablemessages:BindableMessage">
        <Grid Height="48" Opacity="{x:Bind mconvert:IsDeletedToOpacityConverter.Convert(IsDeleted), Mode=OneWay}">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <FontIcon Glyph="{x:Bind mconvert:InfoMessageIconConverter.Convert(Message.Type)}"
                          Foreground="{x:Bind mconvert:InfoMessageColorConverter.Convert(Message.Type)}"/>

                <markdown:MessageRenderer Grid.Column="1" Margin="0,-5,0,0" Context="{x:Bind}" HorizontalAlignment="Left"
                                          Text="{x:Bind mconvert:InfoMessageContentConverter.Convert((bindablemessages:BindableMessage))}"/>

                <TextBlock Grid.Column="2" Text="{x:Bind tconvert:SmartDateTimeFormatConverter.Convert(Message.Timestamp)}"
                           Opacity=".5" Margin="8,0"/>
            </Grid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>

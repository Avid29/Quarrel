<ResourceDictionary
    x:Class="Quarrel.DataTemplates.MessageTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:tc="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:aconvert="using:Quarrel.Converters.Discord.Messages.Attachments"
    xmlns:bconvert="using:Quarrel.Converters.Common.Boolean"
    xmlns:tconvert="using:Quarrel.Converters.Common.Time"
    xmlns:mconvert="using:Quarrel.Converters.Discord.Messages"
    xmlns:qc="using:Quarrel.Controls"
    xmlns:mcontrols="using:Quarrel.Controls.Panels.Messages"
    xmlns:bindablemessages="using:Quarrel.Bindables.Messages"
    xmlns:bindableembeds="using:Quarrel.Bindables.Messages.Embeds"
    xmlns:mselector="using:Quarrel.Selectors.Messages"
    xmlns:markdown="using:Quarrel.Markdown">
    
    <SolidColorBrush x:Key="AttachmentBackgroundBrush" Color="#1E1E1E"/>
    <SolidColorBrush x:Key="AttachmentBorderBrush" Color="#3C3C3C"/>

    <DataTemplate x:Key="DefaultAttachmentTemplate" x:DataType="bindableembeds:BindableAttachment">
        <Grid VerticalAlignment="Top" HorizontalAlignment="Left"
              BorderThickness="1" CornerRadius="4" Padding="8,8,12,8"
              Background="{StaticResource AttachmentBackgroundBrush}"
              BorderBrush="{StaticResource AttachmentBorderBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <FontIcon x:Name="FileIcon" FontSize="36" Glyph="{x:Bind aconvert:AttachmentIconConverter.Convert(FileExtension)}" HorizontalAlignment="Left" Margin="0,0,6,0"/>
            <StackPanel Grid.Column="1">
                <HyperlinkButton Content="{x:Bind Attachment.Filename}" NavigateUri="{x:Bind Attachment.ProxyUrl}" FontSize="18" Padding="0" Style="{StaticResource PlainTextHyperlinkStyle}"/>
                <TextBlock Text="{x:Bind aconvert:HumanizeByteSizeConverter.Convert(Attachment.Size)}" FontSize="11" Opacity="0.5" Margin="0,-2,0,0"/>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ImageAttachmentTemplate" x:DataType="bindableembeds:BindableAttachment">
        <tc:ImageEx Source="{x:Bind Attachment.ProxyUrl}" MaxWidth="400" CornerRadius="2"/>
    </DataTemplate>

    <mselector:AttachmentTemplateSelector x:Key="AttachmentTemplateSelector"
                                          DefaultAttachmentTemplate="{StaticResource DefaultAttachmentTemplate}"
                                          ImageAttachmentTemplate="{StaticResource ImageAttachmentTemplate}"/>

    <DataTemplate x:Key="DefaultMessageTemplate" x:DataType="bindablemessages:BindableMessage">
        <!--Grid must be wrapped in a user control to enable the VisualStateManager-->
        <UserControl HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                     VerticalAlignment="Stretch" VerticalContentAlignment="Stretch">
            <Grid x:Name="RootGrid" Padding="2,12,2,4" Background="Transparent"
                  Opacity="{x:Bind mconvert:IsDeletedToOpacityConverter.Convert(IsDeleted), Mode=OneWay}">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup>
                        <VisualState x:Name="Default">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{x:Bind bconvert:InverseBoolConverter.Convert(IsContinuation), Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Padding" Value="2,12,2,4"/>
                                <Setter Target="Header.Visibility" Value="Visible"/>
                                <Setter Target="ProfileImageContainer.Visibility" Value="Visible"/>
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Continuation">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{x:Bind IsContinuation, Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="RootGrid.Padding" Value="2,2,0,2"/>
                                <Setter Target="Header.Visibility" Value="Collapsed"/>
                                <Setter Target="ProfileImageContainer.Visibility" Value="Collapsed"/>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>

                <Grid.ContextFlyout>
                    <MenuFlyout>
                        <MenuFlyoutItem x:Uid="Message/CopyLink" Text="Copy Message Link"
                                        Command="{x:Bind CopyLinkCommand}">
                            <MenuFlyoutItem.Icon>
                                <SymbolIcon Symbol="Link"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutItem x:Uid="Message/CopyId" Text="Copy ID"
                                        Command="{x:Bind CopyIdCommand}">
                            <MenuFlyoutItem.Icon>
                                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}" Glyph="&#xE8EC;"/>
                            </MenuFlyoutItem.Icon>
                        </MenuFlyoutItem>
                        <MenuFlyoutSeparator Visibility="{x:Bind CanDelete}"/>
                        <MenuFlyoutItem x:Uid="Message/Delete" Text="Delete" Icon="Delete"
                                        Command="{x:Bind DeleteCommand}"
                                        Foreground="{StaticResource DiscordRedBrush}"
                                        Visibility="{x:Bind CanDelete}"/>
                    </MenuFlyout>
                </Grid.ContextFlyout>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!--Image-->
                <Border x:Name="ProfileImageContainer"  Width="36" Height="36"
                        CornerRadius="18" VerticalAlignment="Top">
                    <tc:ImageEx Source="{x:Bind Author.AvatarUri}"/>
                </Border>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="Header" Orientation="Horizontal" Margin="0,-2,0,0">
                        <HyperlinkButton Content="{x:Bind Author.User.Username}" Style="{StaticResource PlainTextHyperlinkStyle}"
                                         FontSize="14"/>
                        <TextBlock Text="{x:Bind tconvert:SmartDateTimeFormatConverter.Convert(Message.Timestamp)}"
                                   VerticalAlignment="Center" FontSize="12" Opacity=".5" Margin="6,0"/>
                    </StackPanel>

                    <StackPanel Grid.Row="1">
                        <markdown:MessageRenderer Text="{x:Bind Message.Content, Mode=OneWay}" Context="{x:Bind Mode=OneWay}"
                                                  HorizontalAlignment="Left"/>

                        <ItemsControl ItemsSource="{x:Bind Attachments}"
                                      ItemTemplateSelector="{StaticResource AttachmentTemplateSelector}"
                                      HorizontalAlignment="Left"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </UserControl>
    </DataTemplate>

    <DataTemplate x:Key="InfoMessageTemplate" x:DataType="bindablemessages:BindableMessage">
        <Grid Height="48" Opacity="{x:Bind mconvert:IsDeletedToOpacityConverter.Convert(IsDeleted), Mode=OneWay}">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <FontIcon Glyph="{x:Bind mconvert:InfoMessageIconConverter.Convert(Message.Type)}"
                          Foreground="{x:Bind mconvert:InfoMessageColorConverter.Convert(Message.Type)}"/>

                <markdown:MessageRenderer Grid.Column="1" Margin="0,-5,0,0" Context="{x:Bind}" HorizontalAlignment="Left"
                                          Text="{x:Bind mconvert:InfoMessageContentConverter.Convert((bindablemessages:BindableMessage))}"/>

                <TextBlock Grid.Column="2" Text="{x:Bind tconvert:SmartDateTimeFormatConverter.Convert(Message.Timestamp)}"
                           Opacity=".5" Margin="8,0"/>
            </Grid>
        </Grid>
    </DataTemplate>

</ResourceDictionary>

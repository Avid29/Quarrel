<ResourceDictionary
    x:Class="Quarrel.DataTemplates.Channels.ChannelTemplate"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:bindables="using:Quarrel.Models.Bindables"
    xmlns:local="using:Quarrel.DataTemplates.Channels"
    xmlns:channelcontrols="using:Quarrel.Controls.Channels"
    xmlns:controls="using:Quarrel.Controls"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:behaviors="using:Quarrel.Xaml.Behaviors"
    xmlns:tkcontrols="using:Microsoft.Toolkit.Uwp.UI.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="ChannelTemplate" x:DataType="bindables:BindableChannel">
        <UserControl>
            <!--Flyout-->
            <UserControl.ContextFlyout>
                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                    <!--DM-->
                    <MenuFlyoutItem Text="Profile" Visibility="{x:Bind IsDirectChannel, Mode=OneWay}" Command="{x:Bind OpenProfile, Mode=OneWay}"/>
                    <!--Shared-->
                    <MenuFlyoutItem Text="Mark as read" Visibility="{x:Bind IsTypingChannel, Mode=OneWay}" IsEnabled="{x:Bind IsUnread, Mode=OneWay}" Command="{x:Bind MarkAsRead, Mode=OneWay}"/>
                    <ToggleMenuFlyoutItem Text="Mute" IsChecked="{x:Bind Muted, Mode=OneWay}" Visibility="{x:Bind IsTypingChannel, Mode=OneWay}" Command="{x:Bind Mute, Mode=OneWay}"/>
                    <!--<MenuFlyoutItem Text="Channel Settings" Visibility="{x:Bind ViewModel.IsGuildChannel, Mode=OneWay}"/>-->
                    <!--Text Channel-->
                    <MenuFlyoutSubItem Text="Notifications" IsEnabled="False" Visibility="{x:Bind IsTextChannel, Mode=OneWay}"/>
                    <!--Voice Channel-->
                    <ToggleMenuFlyoutItem Text="Hide names" IsEnabled="False" Visibility="{x:Bind IsVoiceChannel, Mode=OneWay}"/>
                    <!--DM-->
                    <MenuFlyoutItem Text="Close DM" Visibility="{x:Bind IsDirectChannel, Mode=OneWay}" Foreground="{ThemeResource dnd}" Command="{x:Bind LeaveGroup, Mode=OneWay}"/>
                    <!--Group Channel-->
                    <MenuFlyoutItem Text="Leave Group" Visibility="{x:Bind IsGroupChannel, Mode=OneWay}" Foreground="{ThemeResource dnd}" Command="{x:Bind LeaveGroup, Mode=OneWay}"/>
                    <!--Shared-->
                    <MenuFlyoutSeparator/>
                    <MenuFlyoutItem Text="Copy Id" Command="{x:Bind CopyId, Mode=OneWay}"/>
                </MenuFlyout>
            </UserControl.ContextFlyout>

            <Grid Visibility="{x:Bind Hidden, Converter={StaticResource NotBoolToVisibilityConverter}, Mode=OneWay}" MinHeight="{x:Bind Model.Type, Converter={StaticResource TypeToMinHeightConverter}, Mode=OneWay}" Padding="22,0,24,0">
                <Grid.Background>
                    <SolidColorBrush Color="{ThemeResource SystemAccentColor}" Opacity="{x:Bind Selected, Converter={StaticResource SelectedToOpacityConverter}, Mode=OneWay}"/>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto" MaxHeight="300"/>
                    <RowDefinition Height="Auto" MaxHeight="10"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="HoverCache" Visibility="Collapsed" Fill="{ThemeResource AcrylicChannelPaneBackground}" Opacity="0.4" Grid.RowSpan="4" Grid.ColumnSpan="4" Margin="-22,-18,-24,0"/>
                
                <!--Selectlion Indicator-->
                <Border x:Name="SelectIndicator" Opacity="0" BorderBrush="{Binding Background, ElementName=UnreadIndicator}" BorderThickness="0,0,0,0" HorizontalAlignment="Stretch" Margin="-24,0" Grid.ColumnSpan="3" Grid.RowSpan="12">
                    <Border.Background>
                        <SolidColorBrush Opacity="0.2" Color="{ThemeResource SystemAccentColor}"/>
                    </Border.Background>
                </Border>
                
                <!--Unread Indicator-->
                <Border x:Name="UnreadIndicator" Visibility="{x:Bind ShowUnread, Mode=OneWay}" Height="24" Width="2" Background="{ThemeResource Foreground}" Margin="-22,0,4,0" HorizontalAlignment="Left" Opacity="0.75"/>
                
                <!--Mention Notifications and Glow-->
                <Grid x:Name="grid" Visibility="{x:Bind MentionCount, Converter={StaticResource MentionCountToVisiblityConverter}, Mode=OneWay}" Grid.RowSpan="4" Grid.ColumnSpan="4" Margin="0,0,-24,0">
                    <Grid.Background>
                        <LinearGradientBrush EndPoint="0,0" StartPoint="1.3,0" ColorInterpolationMode="ScRgbLinearInterpolation" SpreadMethod="Pad">
                            <GradientStop Offset="0.95" Color="#00000000"/>
                            <GradientStop Color="{ThemeResource SystemAccentColor}" Offset="0"/>
                        </LinearGradientBrush>
                    </Grid.Background>
                    <Border Visibility="Visible" Height="24" Width="2" Background="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="-22,0,4,0" HorizontalAlignment="Left" Opacity="1"/>

                    <TextBlock x:Name="NotificationCounter" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}" Text="{x:Bind MentionCount, Mode=OneWay}" FontWeight="SemiBold" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="24,0,24,2" FontSize="15" RenderTransformOrigin="0.5,0.5">
                                <!--<TextBlock.RenderTransform>
                                    <CompositeTransform TranslateX="24"/>
                                </TextBlock.RenderTransform>-->
                    </TextBlock>
                </Grid>
                
                <!--Icon-->
                <Rectangle Visibility="{x:Bind ShowIconBackdrop, Mode=OneWay}" Fill="{x:Bind FirstUserDiscriminator, Converter={StaticResource DiscriminatorToBrushConverter}, Mode=OneWay}" x:Name="ChannelImageBackdrop" Width="36" Height="36"  Margin="0,6,6,6" RadiusX="18" RadiusY="18" Opacity="1"/>
                <Border Margin="0,6,6,6" Visibility="{x:Bind IsPrivateChannel}" CornerRadius="18">
                    <tkcontrols:ImageEx Source="{x:Bind ImageUrl, Mode=OneWay}" Width="36" Height="36" DecodePixelWidth="36" DecodePixelHeight="36"/>
                </Border>

                <!--Main Details-->
                <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="0,6" Padding="0,0,-18,0">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Visibility="{x:Bind Permissions.ReadMessages, Converter={StaticResource NotBoolToVisibilityConverter}}" Text="" Opacity="{x:Bind TextOpacity, Mode=OneWay}" FontSize="14" Margin="-2,4,6,6" FontFamily="Segoe MDL2 Assets" />
                        <SymbolIcon x:Name="MuteIcon" Visibility="{x:Bind Muted, Mode=OneWay}" Symbol="Mute" Margin="0,0,4,0" Opacity="0.35"/>
                        <channelcontrols:CategoryChveron Visibility="{x:Bind IsCategory}" IsCollapsed="{x:Bind Collapsed, Mode=OneWay}" Grid.Column="2" HorizontalAlignment="Left" Grid.ColumnSpan="4" Margin="0,0,12,0" VerticalAlignment="Center"/>
                        <TextBlock Visibility="{x:Bind IsVoiceChannel}" Text="" Opacity="{x:Bind TextOpacity, Mode=OneWay}" FontSize="14" Margin="-2,4,6,6" FontFamily="Segoe MDL2 Assets" />
                        <TextBlock Visibility="{x:Bind IsTextChannel}" Text="#" Opacity="{x:Bind TextOpacity, Mode=OneWay}" Foreground="{StaticResource Foreground}" FontSize="20" FontWeight="Light" Margin="0,-2,4,0"/>
                        <TextBlock Text="{x:Bind FormattedName, Mode=OneWay}" Opacity="{x:Bind TextOpacity, Mode=OneWay}" Foreground="{x:Bind Model.Type, Converter={StaticResource TypeToBrushConverter}, Mode=OneWay}" Margin="0,1,0,0"/>
                    </StackPanel>
                    <TextBlock x:Name="SubTitle" Visibility="Collapsed" Text="" FontSize="11" FontWeight="SemiBold" Opacity="0.4"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Visibility="Collapsed" x:Name="playing" Text="Playing" VerticalAlignment="Center" FontSize="11" FontWeight="SemiLight" Opacity="0.4" Foreground="{ThemeResource Foreground}" Margin="0,0,3,0"/>
                        <TextBlock Visibility="Collapsed" x:Name="game" VerticalAlignment="Center" Opacity="0.8" FontSize="11" FontWeight="Normal" Foreground="{ThemeResource Foreground}" Margin="0,0,0,0"/>
                        <FontIcon Visibility="Collapsed" x:Name="rich" Glyph="" FontSize="11" Margin="4,0,0,-2" Foreground="{ThemeResource Foreground}"/>
                    </StackPanel>
                </StackPanel>
                
                <!--Typing-->
                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <controls:TypingIndicator Visibility="{x:Bind IsTyping, Mode=OneWay}" HorizontalAlignment="Right" Margin="6,0"/>
                </StackPanel>

                <!--Voice Members-->
                <ListView x:Name="MemberList" ItemsSource="{x:Bind ConnectedUsers.Values, Mode=OneWay}" x:Load="{x:Bind ConnectedUsers.Values, Converter={StaticResource EnumerableAnyToVisibilityConverter}, Mode=OneWay}" SelectionMode="None" IsItemClickEnabled="True" Grid.Row="1" Grid.ColumnSpan="2" Margin="-24,0,-24,12" ItemContainerStyle="{StaticResource ChannelItemStyle}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="ItemClick">
                            <behaviors:OpenListViewItemFlyoutAction/>
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="bindables:BindableVoiceUser">
                            <channelcontrols:VoiceMemberControl/>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

        </UserControl>
    </DataTemplate>
    
</ResourceDictionary>

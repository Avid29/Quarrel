<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:behaviors="using:Quarrel.Xaml.Behaviors"
    xmlns:markdown="using:Quarrel.Controls.Markdown"
    xmlns:bindables="using:Quarrel.Models.Bindables"
    xmlns:templateSelectors="using:Quarrel.TemplateSelectors"
    xmlns:attachments="using:Quarrel.Controls.Messages.Attachments"
    xmlns:models="using:DiscordAPI.Models"
    xmlns:embeds="using:Quarrel.Controls.Messages.Embeds"
    xmlns:members="using:Quarrel.Controls.Members"
    xmlns:messages="using:Quarrel.DataTemplates.Messages"
    x:Class="Quarrel.DataTemplates.Messages.MessageTemplate">

    <ResourceDictionary.MergedDictionaries>
        <messages:ReactionTemplate/>
        <ResourceDictionary Source="../Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <templateSelectors:AttachmentTemplateSelector x:Key="AttachmentTemplateSelector" 
                                              DefaultAttachmentTemplate="{StaticResource DefaultAttachmentTemplate}"
                                              ImageAttachmentTemplate="{StaticResource ImageAttachmentTemplate}"
                                              VideoAttachmentTemplate="{StaticResource VideoAttachmentTemplate}"
                                              />
    <DataTemplate x:Key="DefaultAttachmentTemplate" x:DataType="models:Attachment">
        <attachments:DefaultAttachmentTemplate DataContext="{x:Bind}"/>
    </DataTemplate>
    <DataTemplate x:Key="ImageAttachmentTemplate" x:DataType="models:Attachment">
        <attachments:ImageAttachmentTemplate DataContext="{x:Bind}"/>
    </DataTemplate>
    <DataTemplate x:Key="VideoAttachmentTemplate" x:DataType="models:Attachment">
        <attachments:VideoAttachmentTemplate DataContext="{x:Bind}"/>
    </DataTemplate>

    <templateSelectors:EmbedTemplateSelector x:Key="EmbedTemplateSelector" 
                                         GifvEmbedTemplate="{StaticResource GifvEmbedTemplate}"
                                         YoutubeEmbedTemplate="{StaticResource YoutubeEmbedTemplate}"
                                         ImageEmbedTemplate="{StaticResource ImageEmbedTemplate}"
                                         DefaultEmbedTemplate="{StaticResource DefaultEmbedTemplate}"
                                         />
    <DataTemplate x:Key="GifvEmbedTemplate" x:DataType="models:Embed">
        <embeds:GifvEmbedTemplate DataContext="{x:Bind}"/>
    </DataTemplate>
    <DataTemplate x:Key="YoutubeEmbedTemplate" x:DataType="models:Embed">
        <embeds:YoutubeEmbedTemplate DataContext="{x:Bind}"/>
    </DataTemplate>
    <DataTemplate x:Key="ImageEmbedTemplate" x:DataType="models:Embed">
        <embeds:ImageEmbedTemplate DataContext="{x:Bind}"/>
    </DataTemplate>
    <DataTemplate x:Key="DefaultEmbedTemplate" x:DataType="models:Embed">
        <embeds:DefaultEmbedTemplate DataContext="{x:Bind}"/>
    </DataTemplate>

    <DataTemplate x:Key="MessageTemplate" x:DataType="bindables:BindableMessage">
        <UserControl>
            <Grid x:Name="rootGrid" Padding="0,8,0,0">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="VisualStateGroup">
                        <VisualState x:Name="Continuation">
                            <VisualState.StateTriggers>
                                <StateTrigger IsActive="{x:Bind IsContinuation, Mode=OneWay}"/>
                            </VisualState.StateTriggers>
                            <VisualState.Setters>
                                <Setter Target="row2.(Height)" Value="0"/>
                                <Setter Target="rootGrid.(Padding)">
                                    <Setter.Value>
                                        <Thickness>0,0,0,0</Thickness>
                                    </Setter.Value>
                                </Setter>
                                <Setter Target="userImg.(UIElement.Visibility)">
                                    <Setter.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </Setter.Value>
                                </Setter>
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto" x:Name="row2"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid x:Phase="4" Grid.ColumnSpan="2" x:Name="HeaderGrid" x:Load="{x:Bind IsLastReadMessage, Mode=OneWay}" Margin="8,8,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Height="1" Stroke="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="0,0,6,0"/>
                    <TextBlock x:Name="HeaderText" Text="NEW MESSAGES" FontWeight="SemiLight" Grid.Column="1" FontSize="12" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                    <Rectangle Height="1" Stroke="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="6,0,0,0" Grid.Column="2"/>
                </Grid>

                <Canvas Grid.Row="1" VerticalAlignment="Top" Margin="12,0">
                    <Button Height="40" Width="40"
                        Style="{StaticResource DimButton}">
                        <Rectangle x:Name="userImg"
                               extensions:Mouse.Cursor="Hand"
                               Width="40" Height="40" 
                               RadiusX="20" RadiusY="20">
                            <Rectangle.Fill>
                                <ImageBrush ImageSource="{x:Bind Model.User.AvatarUriProperty, Converter={StaticResource UriToImageSourceConverter}, Mode=OneWay}"/>
                            </Rectangle.Fill>
                        </Rectangle>

                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <behaviors:OpenFlyoutAction TargetObject="{Binding ElementName=AuthorHyperlink}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </Button>
                </Canvas>

                <Grid Grid.Row="1" Grid.Column="1">
                    <StackPanel Orientation="Horizontal">
                        <HyperlinkButton x:Name="AuthorHyperlink" 
                                 Style="{StaticResource PlainTextHyperlinkStyle}" Content="{x:Bind AuthorName, Mode=OneWay}" 
                                 Foreground="{x:Bind AuthorColor, Converter={StaticResource IntColorToBrushConverter}, Mode=OneWay}">
                            <FlyoutBase.AttachedFlyout>
                                <Flyout x:Key="MemberFlyoutTemplate" FlyoutPresenterStyle="{StaticResource GenericFlyoutStyle}">
                                    <members:MemberFlyoutTemplate DataContext="{x:Bind Author, Mode=OneWay}"/>
                                </Flyout>
                            </FlyoutBase.AttachedFlyout>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <behaviors:OpenFlyoutAction />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </HyperlinkButton>
                        <TextBlock x:Phase="1" Text="{x:Bind Model.Timestamp, Converter={StaticResource DateTimeToTextConverter}}"
                               Margin="4,0,0,2" VerticalAlignment="Bottom" FontSize="11" Opacity="0.3"/>

                        <TextBlock x:Phase="1" Text="(Edited" Visibility="{x:Bind Model.EditedTimestamp, Converter={StaticResource NotNullToVisibilityConverter}, Mode=OneWay}"
                               Margin="4,0,0,2" VerticalAlignment="Bottom" FontSize="9" Opacity="0.25"/>
                        <TextBlock x:Phase="1" Text="{x:Bind Model.EditedTimestamp, Converter={StaticResource DateTimeToTextConverter}, Mode=OneWay}"
                               Visibility="{x:Bind Model.EditedTimestamp, Converter={StaticResource NotNullToVisibilityConverter}, Mode=OneWay}"
                               Margin="2,0,0,2" VerticalAlignment="Bottom" FontSize="9" Opacity="0.25"/>
                        <TextBlock x:Phase="1" Text=") " Visibility="{x:Bind Model.EditedTimestamp, Converter={StaticResource NotNullToVisibilityConverter}, Mode=OneWay}"
                               Margin="0,0,0,2" VerticalAlignment="Bottom" FontSize="9" Opacity="0.25"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="2" x:Name="body" Margin="0,0,0,2" MinWidth="20">
                    <markdown:MarkdownTextBlock x:Phase="1" Users="{x:Bind Model.Mentions, Mode=OneWay}" 
                                            Text="{x:Bind Model.Content, Mode=OneWay}"
                                            TextWrapping="WrapWholeWords"
                                            FontWeight="SemiLight" Opacity="0.9"/>
                </Grid>

                <!--
                x:Load causes slowdowns here
            -->
                <Grid Grid.Column="1" Grid.Row="3" x:Name="AttachmentList">
                    <ListView x:Phase="3" ItemsSource="{x:Bind Model.Attachments, Mode=OneWay}"
                          ItemTemplateSelector="{StaticResource AttachmentTemplateSelector}"
                          SelectionMode="None"/>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="4" x:Name="EmbedList">
                    <ListView x:Phase="3" ItemsSource="{x:Bind Model.Embeds, Mode=OneWay}"
                          ItemTemplateSelector="{StaticResource EmbedTemplateSelector}"
                          SelectionMode="None"/>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="5" x:Name="ReactionList">
                    <ListView x:Phase="4" ItemsSource="{x:Bind Model.Reactions, Mode=OneWay}"
                          ItemTemplate="{StaticResource Reaction}"
                          SelectionMode="None">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Margin" Value="4,0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="MinWidth" Value="48"/>
                                <Setter Property="MaxWidth" Value="60"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </Grid>
            </Grid>
        </UserControl>
    </DataTemplate>
</ResourceDictionary>

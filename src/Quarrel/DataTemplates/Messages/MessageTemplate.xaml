<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:behaviors="using:Quarrel.Xaml.Behaviors"
    xmlns:markdown="using:Quarrel.Controls.Markdown"
    xmlns:bindables="using:Quarrel.ViewModels.Models.Bindables"
    xmlns:templateSelectors="using:Quarrel.TemplateSelectors"
    xmlns:models="using:DiscordAPI.Models"
    xmlns:embeds="using:Quarrel.Controls.Messages.Embeds"
    xmlns:members="using:Quarrel.Controls.Members"
    xmlns:messagecontrols="using:Quarrel.Controls.Messages"
    xmlns:messages="using:Quarrel.DataTemplates.Messages"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:Windows10version1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 7)"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:controls="using:Quarrel.Controls"
    x:Class="Quarrel.DataTemplates.Messages.MessageTemplate">

    <ResourceDictionary.MergedDictionaries>
        <messages:ReactionTemplate/>
        <ResourceDictionary Source="../Converters.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <templateSelectors:AttachmentTemplateSelector x:Key="AttachmentTemplateSelector" 
                                              DefaultAttachmentTemplate="{StaticResource DefaultAttachmentTemplate}"
                                              ImageAttachmentTemplate="{StaticResource ImageAttachmentTemplate}"
                                              VideoAttachmentTemplate="{StaticResource VideoAttachmentTemplate}"
                                              />
    <DataTemplate x:Key="DefaultAttachmentTemplate" x:DataType="models:Attachment">
        <Grid VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <FontIcon x:Name="FileIcon" FontSize="32" Glyph="" Foreground="{ThemeResource LinkColor}" HorizontalAlignment="Left" Margin="0,0,6,0"/>
            <StackPanel Grid.Column="1">
                <HyperlinkButton Content="{x:Bind Filename, Mode=OneWay}" NavigateUri="{x:Bind ProxyUrl, Mode=OneWay}" FontSize="18" Foreground="{ThemeResource LinkColor}" Padding="0" Style="{StaticResource PlainTextHyperlinkStyle}"/>
                <TextBlock Text="{x:Bind Size, Converter={StaticResource SizeToHumanizedSizeConverter}, Mode=OneWay}" FontSize="11" Opacity="0.5" Margin="0,4,0,0"/>
            </StackPanel>
        </Grid>
    </DataTemplate>
    <DataTemplate x:Key="ImageAttachmentTemplate" x:DataType="models:Attachment">
        <toolkit:ImageEx Source="{x:Bind Url, Mode=OneWay}"
                         Height="{x:Bind ActualHeight, Mode=OneWay}"
                         Width="{x:Bind ActualWidth, Mode=OneWay}"
                         HorizontalAlignment="Left" Tapped="Expand" MaxHeight="250"/>
    </DataTemplate>
    <DataTemplate x:Key="VideoAttachmentTemplate" x:DataType="models:Attachment">
        <MediaElement Source="{x:Bind ProxyUrl, Mode=OneWay}"
                      MaxHeight="360" MaxWidth="640"
                      MinHeight="48" MinWidth="100" 
                      Width="{x:Bind ActualWidth}" Height="{x:Bind ActualHeight}" 
                      AreTransportControlsEnabled="True" AutoPlay="False">
            <MediaElement.TransportControls>
                <MediaTransportControls IsCompact="True" IsZoomButtonVisible="False"/>
            </MediaElement.TransportControls>
        </MediaElement>
    </DataTemplate>

    <templateSelectors:EmbedTemplateSelector x:Key="EmbedTemplateSelector" 
                                         GifvEmbedTemplate="{StaticResource GifvEmbedTemplate}"
                                         YoutubeEmbedTemplate="{StaticResource YoutubeEmbedTemplate}"
                                         ImageEmbedTemplate="{StaticResource ImageEmbedTemplate}"
                                         DefaultEmbedTemplate="{StaticResource DefaultEmbedTemplate}"
                                         />
    <DataTemplate x:Key="GifvEmbedTemplate" x:DataType="models:Embed">
        <MediaElement Source="{x:Bind Video.Url, Mode=OneWay}" IsLooping="True"
                      Height="{x:Bind Video.ActualHeight, Mode=OneWay}" Width="{x:Bind Video.ActualWidth, Mode=OneWay}"
                      MaxHeight="250"/>
    </DataTemplate>
    <DataTemplate x:Key="YoutubeEmbedTemplate" x:DataType="models:Embed">
        <embeds:YoutubeEmbedTemplate DataContext="{x:Bind}" MaxHeight="250"/>
    </DataTemplate>
    <DataTemplate x:Key="ImageEmbedTemplate" x:DataType="models:Embed">
        <toolkit:ImageEx Source="{x:Bind Thumbnail.BindUrl, Mode=OneWay}" Width="{x:Bind Thumbnail.Width}" Height="{x:Bind Thumbnail.BindHeight}" HorizontalAlignment="Left"
                         MaxHeight="250"/>
    </DataTemplate>
    <DataTemplate x:Key="DefaultEmbedTemplate" x:DataType="models:Embed">
        <Border CornerRadius="4" Background="{ThemeResource MidBG}">
            <Grid>
                <Border x:Name="SideBorder" Width="4" HorizontalAlignment="Left" Background="{x:Bind Color, Converter={StaticResource IntColorToBrushConverter}, Mode=OneWay}" CornerRadius="4,0,0,4"/>
                <StackPanel x:Name="stacker" Margin="16,8,16,8" MaxWidth="400">
                    <Grid x:Name="HeaderGrid">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Margin="0,0,16,0">
                            <StackPanel Orientation="Horizontal" x:Name="AuthorSP" x:Load="{x:Bind Author, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}">
                                <Border CornerRadius="10" Margin="0,0,10,0" x:Name="AuthorRect" x:Load="{x:Bind Author.IconUrl, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}">
                                    <toolkit:ImageEx Width="20" Height="20" DecodePixelWidth="20" DecodePixelHeight="20" Source="{Binding Author.ProxyIconUrl}"/>
                                </Border>
                                <HyperlinkButton x:Name="AuthorText" Content="{x:Bind Author.Name, Mode=OneWay}" NavigateUri="{Binding Author.Url, Mode=OneWay}" x:Load="{x:Bind Author.Name, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}" FontSize="13" FontWeight="SemiBold" Style="{StaticResource PlainTextHyperlinkStyle}" Foreground="{ThemeResource Foreground}"/>
                            </StackPanel>
                            <TextBlock TextWrapping="WrapWholeWords" TextDecorations="Underline" x:Name="TitleTB" x:Load="{x:Bind Title, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}" FontSize="13" FontWeight="SemiBold" Margin="0,4,0,0">
                                <Hyperlink NavigateUri="{Binding Url}" >
                                    <Run Text="{x:Bind Title, Mode=OneWay}" />
                                </Hyperlink>
                            </TextBlock>

                            <markdown:MarkdownTextBlock Text="{x:Bind Description, Mode=OneWay}" x:Name="ContentMDBlock" x:Load="{x:Bind Description, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}" Opacity="0.75" FontSize="13" Margin="0,0,0,0" EnableHiddenLinks="True"/>
                            <StackPanel x:Name="FieldsStacker"/>
                        </StackPanel>
                        <Grid Grid.Row="1" MaxWidth="400" x:Name="ThumbnailImage" x:Load="{x:Bind Thumbnail, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}">
                            <Border CornerRadius="3">
                                <toolkit:ImageEx Source="{x:Bind Thumbnail.BindUrl, Mode=OneWay}" MaxWidth="400" MaxHeight="{x:Bind Thumbnail.BindHeight}"  Stretch="Uniform" Tapped="Expand"/>
                            </Border>
                         </Grid>
                    </Grid>
                    <Viewbox HorizontalAlignment="Left" x:Name="ImageVB" x:Load="{x:Bind Image, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}" StretchDirection="DownOnly" MaxWidth="400" MaxHeight="250">
                        <toolkit:ImageEx Source="{x:Bind Image.ProxyUrl, Mode=OneWay}" Tapped="Expand"/>
                    </Viewbox>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel x:Name="FooterSP" x:Load="{x:Bind Footer, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}" Orientation="Horizontal">
                            <toolkit:ImageEx Source="{x:Bind Footer.ProxyIconUrl, Mode=OneWay}" x:Name="FooterImage" x:Load="{x:Bind Footer.ProxyIconUrl, Converter={StaticResource NotNullToBoolConverter}, Mode=OneWay}" Width="18" Height="18" Margin="0,0,8,0"/>
                            <TextBlock Text="{x:Bind Footer.Text, Mode=OneWay}" FontSize="12" FontWeight="SemiBold" Opacity="0.4" VerticalAlignment="Center"/>
                        </StackPanel>
                        <Button Visibility="Collapsed" Style="{StaticResource IntegratedButton}" Grid.Column="1" HorizontalAlignment="Right">
                            <FontIcon Glyph="&#xE72D;" FontFamily="Segoe MDL2 Assets" />
                        </Button>
                    </Grid>
                </StackPanel>
            </Grid>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="MessageTemplate" x:DataType="bindables:BindableMessage">
        <UserControl>
            <UserControl.Resources>
                <Storyboard x:Name="PointerEntered">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0.5">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CircleEase EasingMode="EaseOut"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AddEmojiButton" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0.5">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CircleEase EasingMode="EaseIn"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Name="PointerExited">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MoreButton" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CircleEase EasingMode="EaseIn"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="AddEmojiButton" Storyboard.TargetProperty="Opacity">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.35" Value="0">
                            <EasingDoubleKeyFrame.EasingFunction>
                                <CircleEase EasingMode="EaseIn"/>
                            </EasingDoubleKeyFrame.EasingFunction>
                        </EasingDoubleKeyFrame>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </UserControl.Resources>
            <Grid x:Name="rootGrid">
                <interactivity:Interaction.Behaviors>
                    <core:EventTriggerBehavior EventName="PointerEntered">
                        <core:EventTriggerBehavior.Actions>
                            <media:ControlStoryboardAction Storyboard="{StaticResource PointerEntered}"/>
                        </core:EventTriggerBehavior.Actions>
                    </core:EventTriggerBehavior>
                    <core:EventTriggerBehavior EventName="PointerExited">
                        <core:EventTriggerBehavior.Actions>
                            <media:ControlStoryboardAction Storyboard="{StaticResource PointerExited}"/>
                        </core:EventTriggerBehavior.Actions>
                    </core:EventTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="64"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto" x:Name="row2"/>
                    <RowDefinition/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <Grid x:Phase="4" Grid.ColumnSpan="2" x:Name="HeaderGrid" x:Load="{x:Bind IsLastReadMessage, Mode=OneWay}" Margin="8,8,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Height="1" Stroke="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="0,0,6,0"/>
                    <TextBlock x:Name="HeaderText" Text="NEW MESSAGES" FontWeight="SemiLight" Grid.Column="1" FontSize="12" Foreground="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                    <Rectangle Height="1" Stroke="{ThemeResource SystemControlBackgroundAccentBrush}" Margin="6,0,0,0" Grid.Column="2"/>
                </Grid>

                <Canvas Grid.Row="1" VerticalAlignment="Top" Margin="12,12,12,0"
                        Visibility="{x:Bind IsContinuation, Converter={StaticResource NotBoolToVisibilityConverter}, Mode=OneWay}">
                    <Button Height="40" Width="40"
                        Style="{StaticResource DimButton}">
                        <Border CornerRadius="20">
                            <toolkit:ImageEx x:Phase="1" x:Name="userImg" extensions:Mouse.Cursor="Hand" Width="40" Height="40"  DecodePixelHeight="40" Source="{x:Bind Model.User.AvatarUrl, Mode=OneWay}"/>
                        </Border>
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <behaviors:OpenFlyoutAction TargetObject="{Binding ElementName=AuthorHyperlink}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                    </Button>
                </Canvas>

                <Grid Grid.Row="1" Grid.Column="1" Visibility="{x:Bind IsContinuation, Converter={StaticResource NotBoolToVisibilityConverter}, Mode=OneWay}"
                      Margin="0,8,0,0">
                    <StackPanel Orientation="Horizontal">
                        <HyperlinkButton x:Name="AuthorHyperlink" 
                                 Style="{StaticResource PlainTextHyperlinkStyle}" Content="{x:Bind AuthorName, Mode=OneWay}" 
                                 Foreground="{x:Bind AuthorColor, Converter={StaticResource IntColorToBrushConverter}, Mode=OneWay}">
                            <HyperlinkButton.ContextFlyout>
                                <MenuFlyout MenuFlyoutPresenterStyle="{StaticResource DefaultMenuFlyoutPresenterStyle}">
                                    <MenuFlyoutItem Text="Profile" Command="{x:Bind OpenProfile, Mode=OneWay}"/>
                                    <MenuFlyoutItem Text="Message" IsEnabled="False"/>
                                    <MenuFlyoutSeparator/>
                                    <MenuFlyoutItem Text="Change Nickname" IsEnabled="False"/>
                                    <MenuFlyoutSeparator/>
                                    <MenuFlyoutItem Text="Kick Member" Foreground="{ThemeResource dnd}" IsEnabled="False"/>
                                    <MenuFlyoutItem Text="Ban Member" Foreground="{ThemeResource dnd}" IsEnabled="False"/>
                                    <MenuFlyoutSeparator/>
                                    <MenuFlyoutItem Text="Copy ID" Command="{x:Bind CopyId, Mode=OneWay}"/>
                                </MenuFlyout>
                            </HyperlinkButton.ContextFlyout>
                            <FlyoutBase.AttachedFlyout>
                                <Flyout x:Key="MemberFlyoutTemplate" FlyoutPresenterStyle="{StaticResource GenericFlyoutStyle}">
                                    <members:MemberFlyoutTemplate DataContext="{x:Bind Author, Mode=OneWay}"/>
                                </Flyout>
                            </FlyoutBase.AttachedFlyout>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="Tapped">
                                    <behaviors:OpenFlyoutAction />
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </HyperlinkButton>
                        <TextBlock x:Phase="1" Text="{x:Bind Model.Timestamp, Converter={StaticResource DateTimeToTextConverter}}"
                               Margin="4,0,0,2" VerticalAlignment="Bottom" FontSize="11" Opacity="0.3"/>

                        <TextBlock x:Phase="1" Text="(Edited" Visibility="{x:Bind Model.EditedTimestamp, Converter={StaticResource NotNullToVisibilityConverter}, Mode=OneWay}"
                               Margin="4,0,0,2" VerticalAlignment="Bottom" FontSize="9" Opacity="0.25"/>
                        <TextBlock x:Phase="1" Text="{x:Bind Model.EditedTimestamp, Converter={StaticResource DateTimeToTextConverter}, Mode=OneWay}"
                               Visibility="{x:Bind Model.EditedTimestamp, Converter={StaticResource NotNullToVisibilityConverter}, Mode=OneWay}"
                               Margin="2,0,0,2" VerticalAlignment="Bottom" FontSize="9" Opacity="0.25"/>
                        <TextBlock x:Phase="1" Text=") " Visibility="{x:Bind Model.EditedTimestamp, Converter={StaticResource NotNullToVisibilityConverter}, Mode=OneWay}"
                               Margin="0,0,0,2" VerticalAlignment="Bottom" FontSize="9" Opacity="0.25"/>
                    </StackPanel>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="2" x:Name="body" Margin="0,0,0,2" MinHeight="20">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <markdown:MarkdownTextBlock Users="{x:Bind Model.Mentions, Mode=OneWay}" 
                                                Text="{x:Bind Model.Content, Mode=OneWay}"
                                                Visibility="{x:Bind IsEditing, Converter={StaticResource NotBoolToVisibilityConverter}, Mode=OneWay}"
                                                TextWrapping="WrapWholeWords"
                                                FontWeight="SemiLight" Opacity="0.9" LinkClicked="Markdown_LinkClicked"/>
                    <Grid Visibility="{x:Bind IsEditing, Mode=OneWay}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <TextBox Style="{StaticResource TextBoxStyle1}" Text="{x:Bind EditedText, Mode=TwoWay}"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="1">
                            <HyperlinkButton Content="Cancel" Style="{StaticResource PlainTextHyperlinkStyle}" Margin="8,4" Command="{x:Bind ToggleEdit, Mode=OneWay}"/>
                            <HyperlinkButton Content="Save" Style="{StaticResource PlainTextHyperlinkStyle}" Margin="8,4" Command="{x:Bind SaveEdit, Mode=OneWay}"/>
                        </StackPanel>
                    </Grid>
                    <Button x:Name="AddEmojiButton" Grid.Column="1" VerticalAlignment="Top" Padding="4,0" Style="{StaticResource DimButton}" Opacity="0">
                        <Button.Flyout>
                            <Flyout FlyoutPresenterStyle="{StaticResource GenericFlyoutStyle}">
                                <controls:EmojiPicker EmojiPickedCommand="{x:Bind AddReaction}"/>
                            </Flyout>
                        </Button.Flyout>

                        <SymbolIcon Symbol="Emoji"/>
                    </Button>
                    <Button x:Name="MoreButton" Grid.Column="2" VerticalAlignment="Top" Padding="4,0" Style="{StaticResource DimButton}" Opacity="0">
                        <Button.Flyout>
                            <Flyout FlyoutPresenterStyle="{StaticResource GenericFlyoutStyle}" Placement="Left">
                                <messagecontrols:MessageFlyout DataContext="{x:Bind}" Width="96"/>
                            </Flyout>
                        </Button.Flyout>
                        
                        <SymbolIcon Symbol="More"/>
                    </Button>
                </Grid>

                <!--
                x:Load causes slowdowns here
                -->
                <Grid Grid.Column="1" Grid.Row="3" x:Name="AttachmentList">
                    <ListView ItemsSource="{x:Bind Model.Attachments, Mode=OneWay}"
                          ItemTemplateSelector="{StaticResource AttachmentTemplateSelector}"
                          SelectionMode="None">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="0,8,0,0"/>
                                <Setter Property="MinHeight" Value="0"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="4" x:Name="EmbedList">
                    <ListView ItemsSource="{x:Bind Model.Embeds, Mode=OneWay}"
                          ItemTemplateSelector="{StaticResource EmbedTemplateSelector}"
                          SelectionMode="None">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Padding" Value="0,8,0,0"/>
                                <Setter Property="MinHeight" Value="0"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </Grid>

                <Grid Grid.Column="1" Grid.Row="5" x:Name="ReactionList">
                    <ListView ItemsSource="{x:Bind BindableReactions, Mode=OneWay}"
                          ItemTemplate="{StaticResource Reaction}"
                          SelectionMode="None">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Margin" Value="4,0"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="MinWidth" Value="48"/>
                                <Setter Property="MaxWidth" Value="60"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                </Grid>
            </Grid>
        </UserControl>
    </DataTemplate>
</ResourceDictionary>

<Page
    x:Class="Discord_UWP.SubPages.ExtendedMessageEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Discord_UWP.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <Page.Resources>
            <Storyboard x:Name="NavAway" Completed="NavAway_Completed">
                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetProperty="Opacity" From="1" To="0" Storyboard.TargetName="rootgrid">
                    <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseIn"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetProperty="ScaleX" From="1" To="0.94" Storyboard.TargetName="scale">
                    <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseIn"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Duration="00:00:00.3" Storyboard.TargetProperty="ScaleY" From="1" To="0.94" Storyboard.TargetName="scale">
                    <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseIn"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>
            <Style x:Key="DiscordToggleSwitch" TargetType="ToggleSwitch">
                <Setter Property="Foreground" Value="{ThemeResource ToggleSwitchContentForeground}"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
                <Setter Property="MinWidth" Value="154"/>
                <Setter Property="ManipulationMode" Value="System,TranslateX"/>
                <Setter Property="UseSystemFocusVisuals" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleSwitch">
                            <Grid BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="10"/>

                                </Grid.RowDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>

                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>

                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="HeaderContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchHeaderForegroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OffContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="OnContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContentForegroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="OuterBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOffDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="OuterBorder">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOffDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobBounds">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchFillOnDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="SwitchKnobBounds">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchStrokeOnDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOff">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOffDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="SwitchKnobOn">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchKnobFillOnDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="SwitchAreaGrid">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ToggleSwitchContainerBackgroundDisabled}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ToggleStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition x:Name="DraggingToOnTransition" From="Dragging" GeneratedDuration="0" To="On">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOn">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOff">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="DraggingToOffTransition" From="Dragging" GeneratedDuration="0" To="Off">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OnToOffTransition" From="On" GeneratedDuration="0" To="Off">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition x:Name="OffToOnTransition" From="Off" GeneratedDuration="0" To="On">
                                                <Storyboard>
                                                    <RepositionThemeAnimation FromHorizontalOffset="{Binding TemplateSettings.KnobOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" TargetName="SwitchKnob"/>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOn">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOff">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Dragging">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" To="0.5" Storyboard.TargetName="SwitchKnobBounds">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" To="0" Storyboard.TargetName="OuterBorder">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Off">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" To="0" Storyboard.TargetName="SwitchKnobBounds">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" To="0.2" Storyboard.TargetName="OuterBorder">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="On">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="24" Storyboard.TargetProperty="X" Storyboard.TargetName="KnobTranslateTransform"/>
                                                <DoubleAnimation Duration="0:0:0.3" Storyboard.TargetProperty="Opacity" To="1" Storyboard.TargetName="SwitchKnobBounds">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:0.3" To="0" Storyboard.TargetName="OuterBorder">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CircleEase EasingMode="EaseOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOn">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="1"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SwitchKnobOff">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="0"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="ContentStates">
                                        <VisualState x:Name="OffContent">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OffContentPresenter"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <x:Boolean>True</x:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="OnContent">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="OnContentPresenter"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <x:Boolean>True</x:Boolean>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="HeaderContentPresenter" AutomationProperties.AccessibilityView="Raw" Grid.ColumnSpan="4" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Foreground="{ThemeResource ToggleSwitchHeaderForeground}" IsHitTestVisible="False" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
                                <Grid x:Name="SwitchAreaGrid" Background="{ThemeResource ToggleSwitchContainerBackground}" Grid.ColumnSpan="3" Control.IsTemplateFocusTarget="True" Margin="0,5" Grid.Row="1" Grid.RowSpan="3"/>
                                <ContentPresenter x:Name="OffContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OffContentTemplate}" Content="{TemplateBinding OffContent}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.Row="1" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <ContentPresenter x:Name="OnContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding OnContentTemplate}" Content="{TemplateBinding OnContent}" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="False" Opacity="0" Grid.Row="1" Grid.RowSpan="3" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Rectangle x:Name="SwitchKnobBounds" Fill="{ThemeResource Blurple}" Height="24" Opacity="0" RadiusY="12" Grid.Row="2" RadiusX="12"  Width="48" Grid.Column="2"/>
                                <Rectangle x:Name="OuterBorder" Fill="{ThemeResource InvertedBG}" Opacity="0.2" Height="24" RadiusY="12" Grid.Row="2" RadiusX="12" Width="48" Grid.Column="2"/>

                                <Grid x:Name="SwitchKnob" HorizontalAlignment="Left" Height="24" Grid.Row="2" Width="24" Grid.Column="2">
                                    <Grid.RenderTransform>
                                        <TranslateTransform x:Name="KnobTranslateTransform"/>
                                    </Grid.RenderTransform>
                                    <Ellipse x:Name="SwitchKnobOn" Fill="{ThemeResource ToggleSwitchKnobFillOn}" Height="16" Opacity="0" Width="16"/>
                                    <Ellipse x:Name="SwitchKnobOff" Fill="{ThemeResource ToggleSwitchKnobFillOff}" Height="16" Width="16"/>
                                </Grid>
                                <Thumb x:Name="SwitchThumb" AutomationProperties.AccessibilityView="Raw" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="3">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="Transparent"/>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Page.Resources>
        <Page.RenderTransform>
            <ScaleTransform x:Name="scale"/>
        </Page.RenderTransform>
        <Grid x:Name="rootgrid" Background="{ThemeResource Background}" Margin="-100" Padding="100,112">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="VisualStateGroup">
                    <VisualState x:Name="Small">
                        <VisualState.Setters>
                            <Setter Target="border.(Border.BorderThickness)">
                                <Setter.Value>
                                    <Thickness>0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Target="border.(Border.CornerRadius)">
                                <Setter.Value>
                                    <CornerRadius>0</CornerRadius>
                                </Setter.Value>
                            </Setter>
                            <Setter Target="appBarButton.(UIElement.Visibility)" Value="Collapsed"/>
                            <Setter Target="border.(FrameworkElement.Margin)">
                                <Setter.Value>
                                    <Thickness>0</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Target="button.(UIElement.Visibility)" Value="Visible"/>
                            <Setter Target="rootgrid.(Grid.Padding)">
                                <Setter.Value>
                                    <Thickness>100</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Target="grid.(FrameworkElement.MaxWidth)" Value="10000"/>
                            <Setter Target="grid.(FrameworkElement.MaxHeight)" Value="10000"/>
                        </VisualState.Setters>
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="0"/>
                        </VisualState.StateTriggers>
                    </VisualState>
                    <VisualState x:Name="VisualState">
                        <VisualState.Setters>
                            <Setter Target="rootgrid.(Grid.Padding)">
                                <Setter.Value>
                                    <Thickness>112</Thickness>
                                </Setter.Value>
                            </Setter>
                        </VisualState.Setters>
                        <VisualState.StateTriggers>
                            <AdaptiveTrigger MinWindowWidth="600"/>
                        </VisualState.StateTriggers>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Fill="Transparent" Tapped="UIElement_OnTapped" Margin="-100"/>
            <Grid x:Name="grid">
                <AppBarButton x:Name="appBarButton" Icon="Clear" HorizontalAlignment="Right" Height="64" Margin="0" Click="CloseButton_Click"/>
                <Border x:Name="border" BorderBrush="{ThemeResource Blurple}" Background="{ThemeResource DeepBG}" BorderThickness="1" CornerRadius="4" Padding="24,24,24,0" Margin="0,48,0,0">
                    <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ScrollViewer Margin="0,0,-24,0" Padding="0,0,24,0">
                        <StackPanel>
                            <TextBlock x:Name="header" Text="ADVANCED MESSAGE EDITOR" FontWeight="SemiBold" Margin="0" FontSize="20"/>
                            <TextBlock x:Name="BodyText" FontSize="15" Foreground="{ThemeResource Blurple}" FontWeight="Bold" Text="BODY" Margin="0,12,0,0"/>
                            <RichTextBlock FontSize="14" Opacity="0.6" Margin="0,6,0,0">
                                <Paragraph>
                                    Discord supports a subset of Markdown for
                                    <Bold>**bold**</Bold> ,
                                    <Italic>*italic*</Italic> ,
                                    <Run FontFamily="Consolas">`code`</Run> (or code blocks, with three backticks before and after on empty lines),
                                    and ~~strikethrough~~.
                                </Paragraph>
                            </RichTextBlock>
                            <TextBox x:Name="Editor" Margin="0,6,0,0"/>
                            <TextBlock x:Name="AttachmentsText" FontSize="15" Foreground="{ThemeResource Blurple}" FontWeight="Bold" Text="ATTACHEMENTS" Margin="0,12,0,0"/>
                            <Grid x:Name="AttachedFileViewer" Margin="0" Padding="6" Grid.Row="4" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <FontIcon FontSize="32" Glyph="" Foreground="{ThemeResource LinkColor}" HorizontalAlignment="Left" Margin="0,0,6,0"/>
                                <StackPanel Grid.Column="1">
                                    <HyperlinkButton x:Name="FileName" Content="File.txt" FontSize="18" Foreground="{ThemeResource LinkColor}" Padding="0" Style="{StaticResource PlainHyperlinkStyle}"/>
                                    <TextBlock x:Name="FileSize" FontSize="11" Opacity="0.5" Text="0 B" Margin="0,4,0,0"/>
                                </StackPanel>
                            </Grid>
                            <HyperlinkButton Foreground="{ThemeResource InvertedBG}" Opacity="0.75" Style="{StaticResource HyperlinkButtonStyle1}" Margin="0,6,0,0" Click="OpenFile">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE8E5;" Width="20" Height="20" Margin="0,0,0,-2"/>
                                    <TextBlock Text="Open File" Margin="12,0,0,0"/>
                                </StackPanel>
                            </HyperlinkButton>
                            <HyperlinkButton Foreground="{ThemeResource InvertedBG}" Opacity="0.75" Style="{StaticResource HyperlinkButtonStyle1}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE722;" Width="20" Height="20" Margin="0,0,0,-2"/>
                                    <TextBlock Text="Take photo" Margin="12,0,0,0"/>
                                </StackPanel>
                            </HyperlinkButton>
                            <HyperlinkButton Foreground="{ThemeResource InvertedBG}" Opacity="0.75" Style="{StaticResource HyperlinkButtonStyle1}">
                                <StackPanel Orientation="Horizontal">
                                    <FontIcon Glyph="&#xE720;" Width="20" Height="20" Margin="0,0,0,-2"/>
                                    <TextBlock Text="Record sound" Margin="12,0,0,0"/>
                                </StackPanel>
                            </HyperlinkButton>
                        </StackPanel>
                    </ScrollViewer>
                    <Grid Grid.Row="1" Margin="-24,0" Background="{ThemeResource DarkBG}" Padding="24,12">
                        <Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="button" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Content="Cancel" Style="{StaticResource DiscordButton}" Background="{ThemeResource Blurple}" Margin="2,0" Grid.Column="1" Padding="24,12" Visibility="Collapsed" Click="CloseButton_Click"/>
                            <Button x:Name="SaveButton" VerticalAlignment="Bottom" HorizontalAlignment="Stretch" Content="Send" Style="{StaticResource DiscordButton}" Background="{ThemeResource Blurple}" Margin="2,0,0,0" Grid.Column="2" Padding="24,12" Click="SaveButton_Click"/>
                        </Grid>
                    </Grid>
                    <Grid x:Name="ProgressViewer" Visibility="Collapsed" Grid.RowSpan="2" Grid.ColumnSpan="2" Margin="-24,-24,-24,0">
                        <Grid.Background>
                            <SolidColorBrush Color="{ThemeResource SystemAltHighColor}" Opacity="0.75"/>
                        </Grid.Background>
                        <StackPanel VerticalAlignment="Center" Margin="48,0">
                            <TextBlock x:Name="progressVal" Text="0%" FontSize="48" FontWeight="Light" Foreground="{ThemeResource Blurple}" HorizontalAlignment="Right"/>
                            <ProgressBar x:Name="progressBar" Value="0" Foreground="{ThemeResource Blurple}"/>
                        </StackPanel>
                    </Grid>
                    </Grid>
                    
                </Border>
            </Grid>
        </Grid>
    </Page>
